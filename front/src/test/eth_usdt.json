{"contract":{"asm":"0x0, push1, 0x60\n0x2, push1, 0x40\n0x4, mstore, \n0x5, push1, 0x4\n0x7, calldatasize, \n0x8, lt, \n0x9, push2, 0x196\n0xc, jumpi, \n0xd, push1, 0x0\n0xf, calldataload, \n0x10, push29, 0x100000000000000000000000000000000000000000000000000000000\n0x2e, swap1, \n0x2f, div, \n0x30, push4, 0xffffffff\n0x35, and, \n0x36, dup1, \n0x37, push4, 0x6fdde03\n0x3c, eq, \n0x3d, push2, 0x19b\n0x40, jumpi, \n0x41, dup1, \n0x42, push4, 0x753c30c\n0x47, eq, \n0x48, push2, 0x229\n0x4b, jumpi, \n0x4c, dup1, \n0x4d, push4, 0x95ea7b3\n0x52, eq, \n0x53, push2, 0x262\n0x56, jumpi, \n0x57, dup1, \n0x58, push4, 0xe136b19\n0x5d, eq, \n0x5e, push2, 0x2a4\n0x61, jumpi, \n0x62, dup1, \n0x63, push4, 0xecb93c0\n0x68, eq, \n0x69, push2, 0x2d1\n0x6c, jumpi, \n0x6d, dup1, \n0x6e, push4, 0x18160ddd\n0x73, eq, \n0x74, push2, 0x30a\n0x77, jumpi, \n0x78, dup1, \n0x79, push4, 0x23b872dd\n0x7e, eq, \n0x7f, push2, 0x333\n0x82, jumpi, \n0x83, dup1, \n0x84, push4, 0x26976e3f\n0x89, eq, \n0x8a, push2, 0x394\n0x8d, jumpi, \n0x8e, dup1, \n0x8f, push4, 0x27e235e3\n0x94, eq, \n0x95, push2, 0x3e9\n0x98, jumpi, \n0x99, dup1, \n0x9a, push4, 0x313ce567\n0x9f, eq, \n0xa0, push2, 0x436\n0xa3, jumpi, \n0xa4, dup1, \n0xa5, push4, 0x35390714\n0xaa, eq, \n0xab, push2, 0x45f\n0xae, jumpi, \n0xaf, dup1, \n0xb0, push4, 0x3eaaf86b\n0xb5, eq, \n0xb6, push2, 0x488\n0xb9, jumpi, \n0xba, dup1, \n0xbb, push4, 0x3f4ba83a\n0xc0, eq, \n0xc1, push2, 0x4b1\n0xc4, jumpi, \n0xc5, dup1, \n0xc6, push4, 0x59bf1abe\n0xcb, eq, \n0xcc, push2, 0x4c6\n0xcf, jumpi, \n0xd0, dup1, \n0xd1, push4, 0x5c658165\n0xd6, eq, \n0xd7, push2, 0x517\n0xda, jumpi, \n0xdb, dup1, \n0xdc, push4, 0x5c975abb\n0xe1, eq, \n0xe2, push2, 0x583\n0xe5, jumpi, \n0xe6, dup1, \n0xe7, push4, 0x70a08231\n0xec, eq, \n0xed, push2, 0x5b0\n0xf0, jumpi, \n0xf1, dup1, \n0xf2, push4, 0x8456cb59\n0xf7, eq, \n0xf8, push2, 0x5fd\n0xfb, jumpi, \n0xfc, dup1, \n0xfd, push4, 0x893d20e8\n0x102, eq, \n0x103, push2, 0x612\n0x106, jumpi, \n0x107, dup1, \n0x108, push4, 0x8da5cb5b\n0x10d, eq, \n0x10e, push2, 0x667\n0x111, jumpi, \n0x112, dup1, \n0x113, push4, 0x95d89b41\n0x118, eq, \n0x119, push2, 0x6bc\n0x11c, jumpi, \n0x11d, dup1, \n0x11e, push4, 0xa9059cbb\n0x123, eq, \n0x124, push2, 0x74a\n0x127, jumpi, \n0x128, dup1, \n0x129, push4, 0xc0324c77\n0x12e, eq, \n0x12f, push2, 0x78c\n0x132, jumpi, \n0x133, dup1, \n0x134, push4, 0xcc872b66\n0x139, eq, \n0x13a, push2, 0x7b8\n0x13d, jumpi, \n0x13e, dup1, \n0x13f, push4, 0xdb006a75\n0x144, eq, \n0x145, push2, 0x7db\n0x148, jumpi, \n0x149, dup1, \n0x14a, push4, 0xdd62ed3e\n0x14f, eq, \n0x150, push2, 0x7fe\n0x153, jumpi, \n0x154, dup1, \n0x155, push4, 0xdd644f72\n0x15a, eq, \n0x15b, push2, 0x86a\n0x15e, jumpi, \n0x15f, dup1, \n0x160, push4, 0xe47d6060\n0x165, eq, \n0x166, push2, 0x893\n0x169, jumpi, \n0x16a, dup1, \n0x16b, push4, 0xe4997dc5\n0x170, eq, \n0x171, push2, 0x8e4\n0x174, jumpi, \n0x175, dup1, \n0x176, push4, 0xe5b5019a\n0x17b, eq, \n0x17c, push2, 0x91d\n0x17f, jumpi, \n0x180, dup1, \n0x181, push4, 0xf2fde38b\n0x186, eq, \n0x187, push2, 0x946\n0x18a, jumpi, \n0x18b, dup1, \n0x18c, push4, 0xf3bdc228\n0x191, eq, \n0x192, push2, 0x97f\n0x195, jumpi, \n0x196, jumpdest, \n0x197, push1, 0x0\n0x199, dup1, \n0x19a, revert, \n0x19b, jumpdest, \n0x19c, callvalue, \n0x19d, iszero, \n0x19e, push2, 0x1a6\n0x1a1, jumpi, \n0x1a2, push1, 0x0\n0x1a4, dup1, \n0x1a5, revert, \n0x1a6, jumpdest, \n0x1a7, push2, 0x1ae\n0x1aa, push2, 0x9b8\n0x1ad, jump, \n0x1ae, jumpdest, \n0x1af, push1, 0x40\n0x1b1, mload, \n0x1b2, dup1, \n0x1b3, dup1, \n0x1b4, push1, 0x20\n0x1b6, add, \n0x1b7, dup3, \n0x1b8, dup2, \n0x1b9, sub, \n0x1ba, dup3, \n0x1bb, mstore, \n0x1bc, dup4, \n0x1bd, dup2, \n0x1be, dup2, \n0x1bf, mload, \n0x1c0, dup2, \n0x1c1, mstore, \n0x1c2, push1, 0x20\n0x1c4, add, \n0x1c5, swap2, \n0x1c6, pop, \n0x1c7, dup1, \n0x1c8, mload, \n0x1c9, swap1, \n0x1ca, push1, 0x20\n0x1cc, add, \n0x1cd, swap1, \n0x1ce, dup1, \n0x1cf, dup4, \n0x1d0, dup4, \n0x1d1, push1, 0x0\n0x1d3, jumpdest, \n0x1d4, dup4, \n0x1d5, dup2, \n0x1d6, lt, \n0x1d7, iszero, \n0x1d8, push2, 0x1ee\n0x1db, jumpi, \n0x1dc, dup1, \n0x1dd, dup3, \n0x1de, add, \n0x1df, mload, \n0x1e0, dup2, \n0x1e1, dup5, \n0x1e2, add, \n0x1e3, mstore, \n0x1e4, push1, 0x20\n0x1e6, dup2, \n0x1e7, add, \n0x1e8, swap1, \n0x1e9, pop, \n0x1ea, push2, 0x1d3\n0x1ed, jump, \n0x1ee, jumpdest, \n0x1ef, pop, \n0x1f0, pop, \n0x1f1, pop, \n0x1f2, pop, \n0x1f3, swap1, \n0x1f4, pop, \n0x1f5, swap1, \n0x1f6, dup2, \n0x1f7, add, \n0x1f8, swap1, \n0x1f9, push1, 0x1f\n0x1fb, and, \n0x1fc, dup1, \n0x1fd, iszero, \n0x1fe, push2, 0x21b\n0x201, jumpi, \n0x202, dup1, \n0x203, dup3, \n0x204, sub, \n0x205, dup1, \n0x206, mload, \n0x207, push1, 0x1\n0x209, dup4, \n0x20a, push1, 0x20\n0x20c, sub, \n0x20d, push2, 0x100\n0x210, exp, \n0x211, sub, \n0x212, not, \n0x213, and, \n0x214, dup2, \n0x215, mstore, \n0x216, push1, 0x20\n0x218, add, \n0x219, swap2, \n0x21a, pop, \n0x21b, jumpdest, \n0x21c, pop, \n0x21d, swap3, \n0x21e, pop, \n0x21f, pop, \n0x220, pop, \n0x221, push1, 0x40\n0x223, mload, \n0x224, dup1, \n0x225, swap2, \n0x226, sub, \n0x227, swap1, \n0x228, return, \n0x229, jumpdest, \n0x22a, callvalue, \n0x22b, iszero, \n0x22c, push2, 0x234\n0x22f, jumpi, \n0x230, push1, 0x0\n0x232, dup1, \n0x233, revert, \n0x234, jumpdest, \n0x235, push2, 0x260\n0x238, push1, 0x4\n0x23a, dup1, \n0x23b, dup1, \n0x23c, calldataload, \n0x23d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x252, and, \n0x253, swap1, \n0x254, push1, 0x20\n0x256, add, \n0x257, swap1, \n0x258, swap2, \n0x259, swap1, \n0x25a, pop, \n0x25b, pop, \n0x25c, push2, 0xa56\n0x25f, jump, \n0x260, jumpdest, \n0x261, stop, \n0x262, jumpdest, \n0x263, callvalue, \n0x264, iszero, \n0x265, push2, 0x26d\n0x268, jumpi, \n0x269, push1, 0x0\n0x26b, dup1, \n0x26c, revert, \n0x26d, jumpdest, \n0x26e, push2, 0x2a2\n0x271, push1, 0x4\n0x273, dup1, \n0x274, dup1, \n0x275, calldataload, \n0x276, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x28b, and, \n0x28c, swap1, \n0x28d, push1, 0x20\n0x28f, add, \n0x290, swap1, \n0x291, swap2, \n0x292, swap1, \n0x293, dup1, \n0x294, calldataload, \n0x295, swap1, \n0x296, push1, 0x20\n0x298, add, \n0x299, swap1, \n0x29a, swap2, \n0x29b, swap1, \n0x29c, pop, \n0x29d, pop, \n0x29e, push2, 0xb73\n0x2a1, jump, \n0x2a2, jumpdest, \n0x2a3, stop, \n0x2a4, jumpdest, \n0x2a5, callvalue, \n0x2a6, iszero, \n0x2a7, push2, 0x2af\n0x2aa, jumpi, \n0x2ab, push1, 0x0\n0x2ad, dup1, \n0x2ae, revert, \n0x2af, jumpdest, \n0x2b0, push2, 0x2b7\n0x2b3, push2, 0xcc1\n0x2b6, jump, \n0x2b7, jumpdest, \n0x2b8, push1, 0x40\n0x2ba, mload, \n0x2bb, dup1, \n0x2bc, dup3, \n0x2bd, iszero, \n0x2be, iszero, \n0x2bf, iszero, \n0x2c0, iszero, \n0x2c1, dup2, \n0x2c2, mstore, \n0x2c3, push1, 0x20\n0x2c5, add, \n0x2c6, swap2, \n0x2c7, pop, \n0x2c8, pop, \n0x2c9, push1, 0x40\n0x2cb, mload, \n0x2cc, dup1, \n0x2cd, swap2, \n0x2ce, sub, \n0x2cf, swap1, \n0x2d0, return, \n0x2d1, jumpdest, \n0x2d2, callvalue, \n0x2d3, iszero, \n0x2d4, push2, 0x2dc\n0x2d7, jumpi, \n0x2d8, push1, 0x0\n0x2da, dup1, \n0x2db, revert, \n0x2dc, jumpdest, \n0x2dd, push2, 0x308\n0x2e0, push1, 0x4\n0x2e2, dup1, \n0x2e3, dup1, \n0x2e4, calldataload, \n0x2e5, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2fa, and, \n0x2fb, swap1, \n0x2fc, push1, 0x20\n0x2fe, add, \n0x2ff, swap1, \n0x300, swap2, \n0x301, swap1, \n0x302, pop, \n0x303, pop, \n0x304, push2, 0xcd4\n0x307, jump, \n0x308, jumpdest, \n0x309, stop, \n0x30a, jumpdest, \n0x30b, callvalue, \n0x30c, iszero, \n0x30d, push2, 0x315\n0x310, jumpi, \n0x311, push1, 0x0\n0x313, dup1, \n0x314, revert, \n0x315, jumpdest, \n0x316, push2, 0x31d\n0x319, push2, 0xded\n0x31c, jump, \n0x31d, jumpdest, \n0x31e, push1, 0x40\n0x320, mload, \n0x321, dup1, \n0x322, dup3, \n0x323, dup2, \n0x324, mstore, \n0x325, push1, 0x20\n0x327, add, \n0x328, swap2, \n0x329, pop, \n0x32a, pop, \n0x32b, push1, 0x40\n0x32d, mload, \n0x32e, dup1, \n0x32f, swap2, \n0x330, sub, \n0x331, swap1, \n0x332, return, \n0x333, jumpdest, \n0x334, callvalue, \n0x335, iszero, \n0x336, push2, 0x33e\n0x339, jumpi, \n0x33a, push1, 0x0\n0x33c, dup1, \n0x33d, revert, \n0x33e, jumpdest, \n0x33f, push2, 0x392\n0x342, push1, 0x4\n0x344, dup1, \n0x345, dup1, \n0x346, calldataload, \n0x347, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x35c, and, \n0x35d, swap1, \n0x35e, push1, 0x20\n0x360, add, \n0x361, swap1, \n0x362, swap2, \n0x363, swap1, \n0x364, dup1, \n0x365, calldataload, \n0x366, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x37b, and, \n0x37c, swap1, \n0x37d, push1, 0x20\n0x37f, add, \n0x380, swap1, \n0x381, swap2, \n0x382, swap1, \n0x383, dup1, \n0x384, calldataload, \n0x385, swap1, \n0x386, push1, 0x20\n0x388, add, \n0x389, swap1, \n0x38a, swap2, \n0x38b, swap1, \n0x38c, pop, \n0x38d, pop, \n0x38e, push2, 0xebd\n0x391, jump, \n0x392, jumpdest, \n0x393, stop, \n0x394, jumpdest, \n0x395, callvalue, \n0x396, iszero, \n0x397, push2, 0x39f\n0x39a, jumpi, \n0x39b, push1, 0x0\n0x39d, dup1, \n0x39e, revert, \n0x39f, jumpdest, \n0x3a0, push2, 0x3a7\n0x3a3, push2, 0x109d\n0x3a6, jump, \n0x3a7, jumpdest, \n0x3a8, push1, 0x40\n0x3aa, mload, \n0x3ab, dup1, \n0x3ac, dup3, \n0x3ad, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x3c2, and, \n0x3c3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x3d8, and, \n0x3d9, dup2, \n0x3da, mstore, \n0x3db, push1, 0x20\n0x3dd, add, \n0x3de, swap2, \n0x3df, pop, \n0x3e0, pop, \n0x3e1, push1, 0x40\n0x3e3, mload, \n0x3e4, dup1, \n0x3e5, swap2, \n0x3e6, sub, \n0x3e7, swap1, \n0x3e8, return, \n0x3e9, jumpdest, \n0x3ea, callvalue, \n0x3eb, iszero, \n0x3ec, push2, 0x3f4\n0x3ef, jumpi, \n0x3f0, push1, 0x0\n0x3f2, dup1, \n0x3f3, revert, \n0x3f4, jumpdest, \n0x3f5, push2, 0x420\n0x3f8, push1, 0x4\n0x3fa, dup1, \n0x3fb, dup1, \n0x3fc, calldataload, \n0x3fd, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x412, and, \n0x413, swap1, \n0x414, push1, 0x20\n0x416, add, \n0x417, swap1, \n0x418, swap2, \n0x419, swap1, \n0x41a, pop, \n0x41b, pop, \n0x41c, push2, 0x10c3\n0x41f, jump, \n0x420, jumpdest, \n0x421, push1, 0x40\n0x423, mload, \n0x424, dup1, \n0x425, dup3, \n0x426, dup2, \n0x427, mstore, \n0x428, push1, 0x20\n0x42a, add, \n0x42b, swap2, \n0x42c, pop, \n0x42d, pop, \n0x42e, push1, 0x40\n0x430, mload, \n0x431, dup1, \n0x432, swap2, \n0x433, sub, \n0x434, swap1, \n0x435, return, \n0x436, jumpdest, \n0x437, callvalue, \n0x438, iszero, \n0x439, push2, 0x441\n0x43c, jumpi, \n0x43d, push1, 0x0\n0x43f, dup1, \n0x440, revert, \n0x441, jumpdest, \n0x442, push2, 0x449\n0x445, push2, 0x10db\n0x448, jump, \n0x449, jumpdest, \n0x44a, push1, 0x40\n0x44c, mload, \n0x44d, dup1, \n0x44e, dup3, \n0x44f, dup2, \n0x450, mstore, \n0x451, push1, 0x20\n0x453, add, \n0x454, swap2, \n0x455, pop, \n0x456, pop, \n0x457, push1, 0x40\n0x459, mload, \n0x45a, dup1, \n0x45b, swap2, \n0x45c, sub, \n0x45d, swap1, \n0x45e, return, \n0x45f, jumpdest, \n0x460, callvalue, \n0x461, iszero, \n0x462, push2, 0x46a\n0x465, jumpi, \n0x466, push1, 0x0\n0x468, dup1, \n0x469, revert, \n0x46a, jumpdest, \n0x46b, push2, 0x472\n0x46e, push2, 0x10e1\n0x471, jump, \n0x472, jumpdest, \n0x473, push1, 0x40\n0x475, mload, \n0x476, dup1, \n0x477, dup3, \n0x478, dup2, \n0x479, mstore, \n0x47a, push1, 0x20\n0x47c, add, \n0x47d, swap2, \n0x47e, pop, \n0x47f, pop, \n0x480, push1, 0x40\n0x482, mload, \n0x483, dup1, \n0x484, swap2, \n0x485, sub, \n0x486, swap1, \n0x487, return, \n0x488, jumpdest, \n0x489, callvalue, \n0x48a, iszero, \n0x48b, push2, 0x493\n0x48e, jumpi, \n0x48f, push1, 0x0\n0x491, dup1, \n0x492, revert, \n0x493, jumpdest, \n0x494, push2, 0x49b\n0x497, push2, 0x10e7\n0x49a, jump, \n0x49b, jumpdest, \n0x49c, push1, 0x40\n0x49e, mload, \n0x49f, dup1, \n0x4a0, dup3, \n0x4a1, dup2, \n0x4a2, mstore, \n0x4a3, push1, 0x20\n0x4a5, add, \n0x4a6, swap2, \n0x4a7, pop, \n0x4a8, pop, \n0x4a9, push1, 0x40\n0x4ab, mload, \n0x4ac, dup1, \n0x4ad, swap2, \n0x4ae, sub, \n0x4af, swap1, \n0x4b0, return, \n0x4b1, jumpdest, \n0x4b2, callvalue, \n0x4b3, iszero, \n0x4b4, push2, 0x4bc\n0x4b7, jumpi, \n0x4b8, push1, 0x0\n0x4ba, dup1, \n0x4bb, revert, \n0x4bc, jumpdest, \n0x4bd, push2, 0x4c4\n0x4c0, push2, 0x10ed\n0x4c3, jump, \n0x4c4, jumpdest, \n0x4c5, stop, \n0x4c6, jumpdest, \n0x4c7, callvalue, \n0x4c8, iszero, \n0x4c9, push2, 0x4d1\n0x4cc, jumpi, \n0x4cd, push1, 0x0\n0x4cf, dup1, \n0x4d0, revert, \n0x4d1, jumpdest, \n0x4d2, push2, 0x4fd\n0x4d5, push1, 0x4\n0x4d7, dup1, \n0x4d8, dup1, \n0x4d9, calldataload, \n0x4da, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x4ef, and, \n0x4f0, swap1, \n0x4f1, push1, 0x20\n0x4f3, add, \n0x4f4, swap1, \n0x4f5, swap2, \n0x4f6, swap1, \n0x4f7, pop, \n0x4f8, pop, \n0x4f9, push2, 0x11ab\n0x4fc, jump, \n0x4fd, jumpdest, \n0x4fe, push1, 0x40\n0x500, mload, \n0x501, dup1, \n0x502, dup3, \n0x503, iszero, \n0x504, iszero, \n0x505, iszero, \n0x506, iszero, \n0x507, dup2, \n0x508, mstore, \n0x509, push1, 0x20\n0x50b, add, \n0x50c, swap2, \n0x50d, pop, \n0x50e, pop, \n0x50f, push1, 0x40\n0x511, mload, \n0x512, dup1, \n0x513, swap2, \n0x514, sub, \n0x515, swap1, \n0x516, return, \n0x517, jumpdest, \n0x518, callvalue, \n0x519, iszero, \n0x51a, push2, 0x522\n0x51d, jumpi, \n0x51e, push1, 0x0\n0x520, dup1, \n0x521, revert, \n0x522, jumpdest, \n0x523, push2, 0x56d\n0x526, push1, 0x4\n0x528, dup1, \n0x529, dup1, \n0x52a, calldataload, \n0x52b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x540, and, \n0x541, swap1, \n0x542, push1, 0x20\n0x544, add, \n0x545, swap1, \n0x546, swap2, \n0x547, swap1, \n0x548, dup1, \n0x549, calldataload, \n0x54a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x55f, and, \n0x560, swap1, \n0x561, push1, 0x20\n0x563, add, \n0x564, swap1, \n0x565, swap2, \n0x566, swap1, \n0x567, pop, \n0x568, pop, \n0x569, push2, 0x1201\n0x56c, jump, \n0x56d, jumpdest, \n0x56e, push1, 0x40\n0x570, mload, \n0x571, dup1, \n0x572, dup3, \n0x573, dup2, \n0x574, mstore, \n0x575, push1, 0x20\n0x577, add, \n0x578, swap2, \n0x579, pop, \n0x57a, pop, \n0x57b, push1, 0x40\n0x57d, mload, \n0x57e, dup1, \n0x57f, swap2, \n0x580, sub, \n0x581, swap1, \n0x582, return, \n0x583, jumpdest, \n0x584, callvalue, \n0x585, iszero, \n0x586, push2, 0x58e\n0x589, jumpi, \n0x58a, push1, 0x0\n0x58c, dup1, \n0x58d, revert, \n0x58e, jumpdest, \n0x58f, push2, 0x596\n0x592, push2, 0x1226\n0x595, jump, \n0x596, jumpdest, \n0x597, push1, 0x40\n0x599, mload, \n0x59a, dup1, \n0x59b, dup3, \n0x59c, iszero, \n0x59d, iszero, \n0x59e, iszero, \n0x59f, iszero, \n0x5a0, dup2, \n0x5a1, mstore, \n0x5a2, push1, 0x20\n0x5a4, add, \n0x5a5, swap2, \n0x5a6, pop, \n0x5a7, pop, \n0x5a8, push1, 0x40\n0x5aa, mload, \n0x5ab, dup1, \n0x5ac, swap2, \n0x5ad, sub, \n0x5ae, swap1, \n0x5af, return, \n0x5b0, jumpdest, \n0x5b1, callvalue, \n0x5b2, iszero, \n0x5b3, push2, 0x5bb\n0x5b6, jumpi, \n0x5b7, push1, 0x0\n0x5b9, dup1, \n0x5ba, revert, \n0x5bb, jumpdest, \n0x5bc, push2, 0x5e7\n0x5bf, push1, 0x4\n0x5c1, dup1, \n0x5c2, dup1, \n0x5c3, calldataload, \n0x5c4, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x5d9, and, \n0x5da, swap1, \n0x5db, push1, 0x20\n0x5dd, add, \n0x5de, swap1, \n0x5df, swap2, \n0x5e0, swap1, \n0x5e1, pop, \n0x5e2, pop, \n0x5e3, push2, 0x1239\n0x5e6, jump, \n0x5e7, jumpdest, \n0x5e8, push1, 0x40\n0x5ea, mload, \n0x5eb, dup1, \n0x5ec, dup3, \n0x5ed, dup2, \n0x5ee, mstore, \n0x5ef, push1, 0x20\n0x5f1, add, \n0x5f2, swap2, \n0x5f3, pop, \n0x5f4, pop, \n0x5f5, push1, 0x40\n0x5f7, mload, \n0x5f8, dup1, \n0x5f9, swap2, \n0x5fa, sub, \n0x5fb, swap1, \n0x5fc, return, \n0x5fd, jumpdest, \n0x5fe, callvalue, \n0x5ff, iszero, \n0x600, push2, 0x608\n0x603, jumpi, \n0x604, push1, 0x0\n0x606, dup1, \n0x607, revert, \n0x608, jumpdest, \n0x609, push2, 0x610\n0x60c, push2, 0x1348\n0x60f, jump, \n0x610, jumpdest, \n0x611, stop, \n0x612, jumpdest, \n0x613, callvalue, \n0x614, iszero, \n0x615, push2, 0x61d\n0x618, jumpi, \n0x619, push1, 0x0\n0x61b, dup1, \n0x61c, revert, \n0x61d, jumpdest, \n0x61e, push2, 0x625\n0x621, push2, 0x1408\n0x624, jump, \n0x625, jumpdest, \n0x626, push1, 0x40\n0x628, mload, \n0x629, dup1, \n0x62a, dup3, \n0x62b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x640, and, \n0x641, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x656, and, \n0x657, dup2, \n0x658, mstore, \n0x659, push1, 0x20\n0x65b, add, \n0x65c, swap2, \n0x65d, pop, \n0x65e, pop, \n0x65f, push1, 0x40\n0x661, mload, \n0x662, dup1, \n0x663, swap2, \n0x664, sub, \n0x665, swap1, \n0x666, return, \n0x667, jumpdest, \n0x668, callvalue, \n0x669, iszero, \n0x66a, push2, 0x672\n0x66d, jumpi, \n0x66e, push1, 0x0\n0x670, dup1, \n0x671, revert, \n0x672, jumpdest, \n0x673, push2, 0x67a\n0x676, push2, 0x1431\n0x679, jump, \n0x67a, jumpdest, \n0x67b, push1, 0x40\n0x67d, mload, \n0x67e, dup1, \n0x67f, dup3, \n0x680, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x695, and, \n0x696, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x6ab, and, \n0x6ac, dup2, \n0x6ad, mstore, \n0x6ae, push1, 0x20\n0x6b0, add, \n0x6b1, swap2, \n0x6b2, pop, \n0x6b3, pop, \n0x6b4, push1, 0x40\n0x6b6, mload, \n0x6b7, dup1, \n0x6b8, swap2, \n0x6b9, sub, \n0x6ba, swap1, \n0x6bb, return, \n0x6bc, jumpdest, \n0x6bd, callvalue, \n0x6be, iszero, \n0x6bf, push2, 0x6c7\n0x6c2, jumpi, \n0x6c3, push1, 0x0\n0x6c5, dup1, \n0x6c6, revert, \n0x6c7, jumpdest, \n0x6c8, push2, 0x6cf\n0x6cb, push2, 0x1456\n0x6ce, jump, \n0x6cf, jumpdest, \n0x6d0, push1, 0x40\n0x6d2, mload, \n0x6d3, dup1, \n0x6d4, dup1, \n0x6d5, push1, 0x20\n0x6d7, add, \n0x6d8, dup3, \n0x6d9, dup2, \n0x6da, sub, \n0x6db, dup3, \n0x6dc, mstore, \n0x6dd, dup4, \n0x6de, dup2, \n0x6df, dup2, \n0x6e0, mload, \n0x6e1, dup2, \n0x6e2, mstore, \n0x6e3, push1, 0x20\n0x6e5, add, \n0x6e6, swap2, \n0x6e7, pop, \n0x6e8, dup1, \n0x6e9, mload, \n0x6ea, swap1, \n0x6eb, push1, 0x20\n0x6ed, add, \n0x6ee, swap1, \n0x6ef, dup1, \n0x6f0, dup4, \n0x6f1, dup4, \n0x6f2, push1, 0x0\n0x6f4, jumpdest, \n0x6f5, dup4, \n0x6f6, dup2, \n0x6f7, lt, \n0x6f8, iszero, \n0x6f9, push2, 0x70f\n0x6fc, jumpi, \n0x6fd, dup1, \n0x6fe, dup3, \n0x6ff, add, \n0x700, mload, \n0x701, dup2, \n0x702, dup5, \n0x703, add, \n0x704, mstore, \n0x705, push1, 0x20\n0x707, dup2, \n0x708, add, \n0x709, swap1, \n0x70a, pop, \n0x70b, push2, 0x6f4\n0x70e, jump, \n0x70f, jumpdest, \n0x710, pop, \n0x711, pop, \n0x712, pop, \n0x713, pop, \n0x714, swap1, \n0x715, pop, \n0x716, swap1, \n0x717, dup2, \n0x718, add, \n0x719, swap1, \n0x71a, push1, 0x1f\n0x71c, and, \n0x71d, dup1, \n0x71e, iszero, \n0x71f, push2, 0x73c\n0x722, jumpi, \n0x723, dup1, \n0x724, dup3, \n0x725, sub, \n0x726, dup1, \n0x727, mload, \n0x728, push1, 0x1\n0x72a, dup4, \n0x72b, push1, 0x20\n0x72d, sub, \n0x72e, push2, 0x100\n0x731, exp, \n0x732, sub, \n0x733, not, \n0x734, and, \n0x735, dup2, \n0x736, mstore, \n0x737, push1, 0x20\n0x739, add, \n0x73a, swap2, \n0x73b, pop, \n0x73c, jumpdest, \n0x73d, pop, \n0x73e, swap3, \n0x73f, pop, \n0x740, pop, \n0x741, pop, \n0x742, push1, 0x40\n0x744, mload, \n0x745, dup1, \n0x746, swap2, \n0x747, sub, \n0x748, swap1, \n0x749, return, \n0x74a, jumpdest, \n0x74b, callvalue, \n0x74c, iszero, \n0x74d, push2, 0x755\n0x750, jumpi, \n0x751, push1, 0x0\n0x753, dup1, \n0x754, revert, \n0x755, jumpdest, \n0x756, push2, 0x78a\n0x759, push1, 0x4\n0x75b, dup1, \n0x75c, dup1, \n0x75d, calldataload, \n0x75e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x773, and, \n0x774, swap1, \n0x775, push1, 0x20\n0x777, add, \n0x778, swap1, \n0x779, swap2, \n0x77a, swap1, \n0x77b, dup1, \n0x77c, calldataload, \n0x77d, swap1, \n0x77e, push1, 0x20\n0x780, add, \n0x781, swap1, \n0x782, swap2, \n0x783, swap1, \n0x784, pop, \n0x785, pop, \n0x786, push2, 0x14f4\n0x789, jump, \n0x78a, jumpdest, \n0x78b, stop, \n0x78c, jumpdest, \n0x78d, callvalue, \n0x78e, iszero, \n0x78f, push2, 0x797\n0x792, jumpi, \n0x793, push1, 0x0\n0x795, dup1, \n0x796, revert, \n0x797, jumpdest, \n0x798, push2, 0x7b6\n0x79b, push1, 0x4\n0x79d, dup1, \n0x79e, dup1, \n0x79f, calldataload, \n0x7a0, swap1, \n0x7a1, push1, 0x20\n0x7a3, add, \n0x7a4, swap1, \n0x7a5, swap2, \n0x7a6, swap1, \n0x7a7, dup1, \n0x7a8, calldataload, \n0x7a9, swap1, \n0x7aa, push1, 0x20\n0x7ac, add, \n0x7ad, swap1, \n0x7ae, swap2, \n0x7af, swap1, \n0x7b0, pop, \n0x7b1, pop, \n0x7b2, push2, 0x169e\n0x7b5, jump, \n0x7b6, jumpdest, \n0x7b7, stop, \n0x7b8, jumpdest, \n0x7b9, callvalue, \n0x7ba, iszero, \n0x7bb, push2, 0x7c3\n0x7be, jumpi, \n0x7bf, push1, 0x0\n0x7c1, dup1, \n0x7c2, revert, \n0x7c3, jumpdest, \n0x7c4, push2, 0x7d9\n0x7c7, push1, 0x4\n0x7c9, dup1, \n0x7ca, dup1, \n0x7cb, calldataload, \n0x7cc, swap1, \n0x7cd, push1, 0x20\n0x7cf, add, \n0x7d0, swap1, \n0x7d1, swap2, \n0x7d2, swap1, \n0x7d3, pop, \n0x7d4, pop, \n0x7d5, push2, 0x1783\n0x7d8, jump, \n0x7d9, jumpdest, \n0x7da, stop, \n0x7db, jumpdest, \n0x7dc, callvalue, \n0x7dd, iszero, \n0x7de, push2, 0x7e6\n0x7e1, jumpi, \n0x7e2, push1, 0x0\n0x7e4, dup1, \n0x7e5, revert, \n0x7e6, jumpdest, \n0x7e7, push2, 0x7fc\n0x7ea, push1, 0x4\n0x7ec, dup1, \n0x7ed, dup1, \n0x7ee, calldataload, \n0x7ef, swap1, \n0x7f0, push1, 0x20\n0x7f2, add, \n0x7f3, swap1, \n0x7f4, swap2, \n0x7f5, swap1, \n0x7f6, pop, \n0x7f7, pop, \n0x7f8, push2, 0x197a\n0x7fb, jump, \n0x7fc, jumpdest, \n0x7fd, stop, \n0x7fe, jumpdest, \n0x7ff, callvalue, \n0x800, iszero, \n0x801, push2, 0x809\n0x804, jumpi, \n0x805, push1, 0x0\n0x807, dup1, \n0x808, revert, \n0x809, jumpdest, \n0x80a, push2, 0x854\n0x80d, push1, 0x4\n0x80f, dup1, \n0x810, dup1, \n0x811, calldataload, \n0x812, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x827, and, \n0x828, swap1, \n0x829, push1, 0x20\n0x82b, add, \n0x82c, swap1, \n0x82d, swap2, \n0x82e, swap1, \n0x82f, dup1, \n0x830, calldataload, \n0x831, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x846, and, \n0x847, swap1, \n0x848, push1, 0x20\n0x84a, add, \n0x84b, swap1, \n0x84c, swap2, \n0x84d, swap1, \n0x84e, pop, \n0x84f, pop, \n0x850, push2, 0x1b0d\n0x853, jump, \n0x854, jumpdest, \n0x855, push1, 0x40\n0x857, mload, \n0x858, dup1, \n0x859, dup3, \n0x85a, dup2, \n0x85b, mstore, \n0x85c, push1, 0x20\n0x85e, add, \n0x85f, swap2, \n0x860, pop, \n0x861, pop, \n0x862, push1, 0x40\n0x864, mload, \n0x865, dup1, \n0x866, swap2, \n0x867, sub, \n0x868, swap1, \n0x869, return, \n0x86a, jumpdest, \n0x86b, callvalue, \n0x86c, iszero, \n0x86d, push2, 0x875\n0x870, jumpi, \n0x871, push1, 0x0\n0x873, dup1, \n0x874, revert, \n0x875, jumpdest, \n0x876, push2, 0x87d\n0x879, push2, 0x1c52\n0x87c, jump, \n0x87d, jumpdest, \n0x87e, push1, 0x40\n0x880, mload, \n0x881, dup1, \n0x882, dup3, \n0x883, dup2, \n0x884, mstore, \n0x885, push1, 0x20\n0x887, add, \n0x888, swap2, \n0x889, pop, \n0x88a, pop, \n0x88b, push1, 0x40\n0x88d, mload, \n0x88e, dup1, \n0x88f, swap2, \n0x890, sub, \n0x891, swap1, \n0x892, return, \n0x893, jumpdest, \n0x894, callvalue, \n0x895, iszero, \n0x896, push2, 0x89e\n0x899, jumpi, \n0x89a, push1, 0x0\n0x89c, dup1, \n0x89d, revert, \n0x89e, jumpdest, \n0x89f, push2, 0x8ca\n0x8a2, push1, 0x4\n0x8a4, dup1, \n0x8a5, dup1, \n0x8a6, calldataload, \n0x8a7, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x8bc, and, \n0x8bd, swap1, \n0x8be, push1, 0x20\n0x8c0, add, \n0x8c1, swap1, \n0x8c2, swap2, \n0x8c3, swap1, \n0x8c4, pop, \n0x8c5, pop, \n0x8c6, push2, 0x1c58\n0x8c9, jump, \n0x8ca, jumpdest, \n0x8cb, push1, 0x40\n0x8cd, mload, \n0x8ce, dup1, \n0x8cf, dup3, \n0x8d0, iszero, \n0x8d1, iszero, \n0x8d2, iszero, \n0x8d3, iszero, \n0x8d4, dup2, \n0x8d5, mstore, \n0x8d6, push1, 0x20\n0x8d8, add, \n0x8d9, swap2, \n0x8da, pop, \n0x8db, pop, \n0x8dc, push1, 0x40\n0x8de, mload, \n0x8df, dup1, \n0x8e0, swap2, \n0x8e1, sub, \n0x8e2, swap1, \n0x8e3, return, \n0x8e4, jumpdest, \n0x8e5, callvalue, \n0x8e6, iszero, \n0x8e7, push2, 0x8ef\n0x8ea, jumpi, \n0x8eb, push1, 0x0\n0x8ed, dup1, \n0x8ee, revert, \n0x8ef, jumpdest, \n0x8f0, push2, 0x91b\n0x8f3, push1, 0x4\n0x8f5, dup1, \n0x8f6, dup1, \n0x8f7, calldataload, \n0x8f8, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x90d, and, \n0x90e, swap1, \n0x90f, push1, 0x20\n0x911, add, \n0x912, swap1, \n0x913, swap2, \n0x914, swap1, \n0x915, pop, \n0x916, pop, \n0x917, push2, 0x1c78\n0x91a, jump, \n0x91b, jumpdest, \n0x91c, stop, \n0x91d, jumpdest, \n0x91e, callvalue, \n0x91f, iszero, \n0x920, push2, 0x928\n0x923, jumpi, \n0x924, push1, 0x0\n0x926, dup1, \n0x927, revert, \n0x928, jumpdest, \n0x929, push2, 0x930\n0x92c, push2, 0x1d91\n0x92f, jump, \n0x930, jumpdest, \n0x931, push1, 0x40\n0x933, mload, \n0x934, dup1, \n0x935, dup3, \n0x936, dup2, \n0x937, mstore, \n0x938, push1, 0x20\n0x93a, add, \n0x93b, swap2, \n0x93c, pop, \n0x93d, pop, \n0x93e, push1, 0x40\n0x940, mload, \n0x941, dup1, \n0x942, swap2, \n0x943, sub, \n0x944, swap1, \n0x945, return, \n0x946, jumpdest, \n0x947, callvalue, \n0x948, iszero, \n0x949, push2, 0x951\n0x94c, jumpi, \n0x94d, push1, 0x0\n0x94f, dup1, \n0x950, revert, \n0x951, jumpdest, \n0x952, push2, 0x97d\n0x955, push1, 0x4\n0x957, dup1, \n0x958, dup1, \n0x959, calldataload, \n0x95a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x96f, and, \n0x970, swap1, \n0x971, push1, 0x20\n0x973, add, \n0x974, swap1, \n0x975, swap2, \n0x976, swap1, \n0x977, pop, \n0x978, pop, \n0x979, push2, 0x1db5\n0x97c, jump, \n0x97d, jumpdest, \n0x97e, stop, \n0x97f, jumpdest, \n0x980, callvalue, \n0x981, iszero, \n0x982, push2, 0x98a\n0x985, jumpi, \n0x986, push1, 0x0\n0x988, dup1, \n0x989, revert, \n0x98a, jumpdest, \n0x98b, push2, 0x9b6\n0x98e, push1, 0x4\n0x990, dup1, \n0x991, dup1, \n0x992, calldataload, \n0x993, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x9a8, and, \n0x9a9, swap1, \n0x9aa, push1, 0x20\n0x9ac, add, \n0x9ad, swap1, \n0x9ae, swap2, \n0x9af, swap1, \n0x9b0, pop, \n0x9b1, pop, \n0x9b2, push2, 0x1e8a\n0x9b5, jump, \n0x9b6, jumpdest, \n0x9b7, stop, \n0x9b8, jumpdest, \n0x9b9, push1, 0x7\n0x9bb, dup1, \n0x9bc, sload, \n0x9bd, push1, 0x1\n0x9bf, dup2, \n0x9c0, push1, 0x1\n0x9c2, and, \n0x9c3, iszero, \n0x9c4, push2, 0x100\n0x9c7, mul, \n0x9c8, sub, \n0x9c9, and, \n0x9ca, push1, 0x2\n0x9cc, swap1, \n0x9cd, div, \n0x9ce, dup1, \n0x9cf, push1, 0x1f\n0x9d1, add, \n0x9d2, push1, 0x20\n0x9d4, dup1, \n0x9d5, swap2, \n0x9d6, div, \n0x9d7, mul, \n0x9d8, push1, 0x20\n0x9da, add, \n0x9db, push1, 0x40\n0x9dd, mload, \n0x9de, swap1, \n0x9df, dup2, \n0x9e0, add, \n0x9e1, push1, 0x40\n0x9e3, mstore, \n0x9e4, dup1, \n0x9e5, swap3, \n0x9e6, swap2, \n0x9e7, swap1, \n0x9e8, dup2, \n0x9e9, dup2, \n0x9ea, mstore, \n0x9eb, push1, 0x20\n0x9ed, add, \n0x9ee, dup3, \n0x9ef, dup1, \n0x9f0, sload, \n0x9f1, push1, 0x1\n0x9f3, dup2, \n0x9f4, push1, 0x1\n0x9f6, and, \n0x9f7, iszero, \n0x9f8, push2, 0x100\n0x9fb, mul, \n0x9fc, sub, \n0x9fd, and, \n0x9fe, push1, 0x2\n0xa00, swap1, \n0xa01, div, \n0xa02, dup1, \n0xa03, iszero, \n0xa04, push2, 0xa4e\n0xa07, jumpi, \n0xa08, dup1, \n0xa09, push1, 0x1f\n0xa0b, lt, \n0xa0c, push2, 0xa23\n0xa0f, jumpi, \n0xa10, push2, 0x100\n0xa13, dup1, \n0xa14, dup4, \n0xa15, sload, \n0xa16, div, \n0xa17, mul, \n0xa18, dup4, \n0xa19, mstore, \n0xa1a, swap2, \n0xa1b, push1, 0x20\n0xa1d, add, \n0xa1e, swap2, \n0xa1f, push2, 0xa4e\n0xa22, jump, \n0xa23, jumpdest, \n0xa24, dup3, \n0xa25, add, \n0xa26, swap2, \n0xa27, swap1, \n0xa28, push1, 0x0\n0xa2a, mstore, \n0xa2b, push1, 0x20\n0xa2d, push1, 0x0\n0xa2f, sha3, \n0xa30, swap1, \n0xa31, jumpdest, \n0xa32, dup2, \n0xa33, sload, \n0xa34, dup2, \n0xa35, mstore, \n0xa36, swap1, \n0xa37, push1, 0x1\n0xa39, add, \n0xa3a, swap1, \n0xa3b, push1, 0x20\n0xa3d, add, \n0xa3e, dup1, \n0xa3f, dup4, \n0xa40, gt, \n0xa41, push2, 0xa31\n0xa44, jumpi, \n0xa45, dup3, \n0xa46, swap1, \n0xa47, sub, \n0xa48, push1, 0x1f\n0xa4a, and, \n0xa4b, dup3, \n0xa4c, add, \n0xa4d, swap2, \n0xa4e, jumpdest, \n0xa4f, pop, \n0xa50, pop, \n0xa51, pop, \n0xa52, pop, \n0xa53, pop, \n0xa54, dup2, \n0xa55, jump, \n0xa56, jumpdest, \n0xa57, push1, 0x0\n0xa59, dup1, \n0xa5a, swap1, \n0xa5b, sload, \n0xa5c, swap1, \n0xa5d, push2, 0x100\n0xa60, exp, \n0xa61, swap1, \n0xa62, div, \n0xa63, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xa78, and, \n0xa79, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xa8e, and, \n0xa8f, caller, \n0xa90, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xaa5, and, \n0xaa6, eq, \n0xaa7, iszero, \n0xaa8, iszero, \n0xaa9, push2, 0xab1\n0xaac, jumpi, \n0xaad, push1, 0x0\n0xaaf, dup1, \n0xab0, revert, \n0xab1, jumpdest, \n0xab2, push1, 0x1\n0xab4, push1, 0xa\n0xab6, push1, 0x14\n0xab8, push2, 0x100\n0xabb, exp, \n0xabc, dup2, \n0xabd, sload, \n0xabe, dup2, \n0xabf, push1, 0xff\n0xac1, mul, \n0xac2, not, \n0xac3, and, \n0xac4, swap1, \n0xac5, dup4, \n0xac6, iszero, \n0xac7, iszero, \n0xac8, mul, \n0xac9, or, \n0xaca, swap1, \n0xacb, sstore, \n0xacc, pop, \n0xacd, dup1, \n0xace, push1, 0xa\n0xad0, push1, 0x0\n0xad2, push2, 0x100\n0xad5, exp, \n0xad6, dup2, \n0xad7, sload, \n0xad8, dup2, \n0xad9, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xaee, mul, \n0xaef, not, \n0xaf0, and, \n0xaf1, swap1, \n0xaf2, dup4, \n0xaf3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xb08, and, \n0xb09, mul, \n0xb0a, or, \n0xb0b, swap1, \n0xb0c, sstore, \n0xb0d, pop, \n0xb0e, push32, 0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n0xb2f, dup2, \n0xb30, push1, 0x40\n0xb32, mload, \n0xb33, dup1, \n0xb34, dup3, \n0xb35, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xb4a, and, \n0xb4b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xb60, and, \n0xb61, dup2, \n0xb62, mstore, \n0xb63, push1, 0x20\n0xb65, add, \n0xb66, swap2, \n0xb67, pop, \n0xb68, pop, \n0xb69, push1, 0x40\n0xb6b, mload, \n0xb6c, dup1, \n0xb6d, swap2, \n0xb6e, sub, \n0xb6f, swap1, \n0xb70, log1, \n0xb71, pop, \n0xb72, jump, \n0xb73, jumpdest, \n0xb74, push1, 0x40\n0xb76, push1, 0x4\n0xb78, dup2, \n0xb79, add, \n0xb7a, push1, 0x0\n0xb7c, calldatasize, \n0xb7d, swap1, \n0xb7e, pop, \n0xb7f, lt, \n0xb80, iszero, \n0xb81, iszero, \n0xb82, iszero, \n0xb83, push2, 0xb8b\n0xb86, jumpi, \n0xb87, push1, 0x0\n0xb89, dup1, \n0xb8a, revert, \n0xb8b, jumpdest, \n0xb8c, push1, 0xa\n0xb8e, push1, 0x14\n0xb90, swap1, \n0xb91, sload, \n0xb92, swap1, \n0xb93, push2, 0x100\n0xb96, exp, \n0xb97, swap1, \n0xb98, div, \n0xb99, push1, 0xff\n0xb9b, and, \n0xb9c, iszero, \n0xb9d, push2, 0xcb1\n0xba0, jumpi, \n0xba1, push1, 0xa\n0xba3, push1, 0x0\n0xba5, swap1, \n0xba6, sload, \n0xba7, swap1, \n0xba8, push2, 0x100\n0xbab, exp, \n0xbac, swap1, \n0xbad, div, \n0xbae, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xbc3, and, \n0xbc4, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xbd9, and, \n0xbda, push4, 0xaee92d33\n0xbdf, caller, \n0xbe0, dup6, \n0xbe1, dup6, \n0xbe2, push1, 0x40\n0xbe4, mload, \n0xbe5, dup5, \n0xbe6, push4, 0xffffffff\n0xbeb, and, \n0xbec, push29, 0x100000000000000000000000000000000000000000000000000000000\n0xc0a, mul, \n0xc0b, dup2, \n0xc0c, mstore, \n0xc0d, push1, 0x4\n0xc0f, add, \n0xc10, dup1, \n0xc11, dup5, \n0xc12, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xc27, and, \n0xc28, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xc3d, and, \n0xc3e, dup2, \n0xc3f, mstore, \n0xc40, push1, 0x20\n0xc42, add, \n0xc43, dup4, \n0xc44, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xc59, and, \n0xc5a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xc6f, and, \n0xc70, dup2, \n0xc71, mstore, \n0xc72, push1, 0x20\n0xc74, add, \n0xc75, dup3, \n0xc76, dup2, \n0xc77, mstore, \n0xc78, push1, 0x20\n0xc7a, add, \n0xc7b, swap4, \n0xc7c, pop, \n0xc7d, pop, \n0xc7e, pop, \n0xc7f, pop, \n0xc80, push1, 0x0\n0xc82, push1, 0x40\n0xc84, mload, \n0xc85, dup1, \n0xc86, dup4, \n0xc87, sub, \n0xc88, dup2, \n0xc89, push1, 0x0\n0xc8b, dup8, \n0xc8c, dup1, \n0xc8d, extcodesize, \n0xc8e, iszero, \n0xc8f, iszero, \n0xc90, push2, 0xc98\n0xc93, jumpi, \n0xc94, push1, 0x0\n0xc96, dup1, \n0xc97, revert, \n0xc98, jumpdest, \n0xc99, push2, 0x2c6\n0xc9c, gas, \n0xc9d, sub, \n0xc9e, call, \n0xc9f, iszero, \n0xca0, iszero, \n0xca1, push2, 0xca9\n0xca4, jumpi, \n0xca5, push1, 0x0\n0xca7, dup1, \n0xca8, revert, \n0xca9, jumpdest, \n0xcaa, pop, \n0xcab, pop, \n0xcac, pop, \n0xcad, push2, 0xcbc\n0xcb0, jump, \n0xcb1, jumpdest, \n0xcb2, push2, 0xcbb\n0xcb5, dup4, \n0xcb6, dup4, \n0xcb7, push2, 0x200e\n0xcba, jump, \n0xcbb, jumpdest, \n0xcbc, jumpdest, \n0xcbd, pop, \n0xcbe, pop, \n0xcbf, pop, \n0xcc0, jump, \n0xcc1, jumpdest, \n0xcc2, push1, 0xa\n0xcc4, push1, 0x14\n0xcc6, swap1, \n0xcc7, sload, \n0xcc8, swap1, \n0xcc9, push2, 0x100\n0xccc, exp, \n0xccd, swap1, \n0xcce, div, \n0xccf, push1, 0xff\n0xcd1, and, \n0xcd2, dup2, \n0xcd3, jump, \n0xcd4, jumpdest, \n0xcd5, push1, 0x0\n0xcd7, dup1, \n0xcd8, swap1, \n0xcd9, sload, \n0xcda, swap1, \n0xcdb, push2, 0x100\n0xcde, exp, \n0xcdf, swap1, \n0xce0, div, \n0xce1, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xcf6, and, \n0xcf7, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xd0c, and, \n0xd0d, caller, \n0xd0e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xd23, and, \n0xd24, eq, \n0xd25, iszero, \n0xd26, iszero, \n0xd27, push2, 0xd2f\n0xd2a, jumpi, \n0xd2b, push1, 0x0\n0xd2d, dup1, \n0xd2e, revert, \n0xd2f, jumpdest, \n0xd30, push1, 0x1\n0xd32, push1, 0x6\n0xd34, push1, 0x0\n0xd36, dup4, \n0xd37, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xd4c, and, \n0xd4d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xd62, and, \n0xd63, dup2, \n0xd64, mstore, \n0xd65, push1, 0x20\n0xd67, add, \n0xd68, swap1, \n0xd69, dup2, \n0xd6a, mstore, \n0xd6b, push1, 0x20\n0xd6d, add, \n0xd6e, push1, 0x0\n0xd70, sha3, \n0xd71, push1, 0x0\n0xd73, push2, 0x100\n0xd76, exp, \n0xd77, dup2, \n0xd78, sload, \n0xd79, dup2, \n0xd7a, push1, 0xff\n0xd7c, mul, \n0xd7d, not, \n0xd7e, and, \n0xd7f, swap1, \n0xd80, dup4, \n0xd81, iszero, \n0xd82, iszero, \n0xd83, mul, \n0xd84, or, \n0xd85, swap1, \n0xd86, sstore, \n0xd87, pop, \n0xd88, push32, 0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n0xda9, dup2, \n0xdaa, push1, 0x40\n0xdac, mload, \n0xdad, dup1, \n0xdae, dup3, \n0xdaf, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xdc4, and, \n0xdc5, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xdda, and, \n0xddb, dup2, \n0xddc, mstore, \n0xddd, push1, 0x20\n0xddf, add, \n0xde0, swap2, \n0xde1, pop, \n0xde2, pop, \n0xde3, push1, 0x40\n0xde5, mload, \n0xde6, dup1, \n0xde7, swap2, \n0xde8, sub, \n0xde9, swap1, \n0xdea, log1, \n0xdeb, pop, \n0xdec, jump, \n0xded, jumpdest, \n0xdee, push1, 0x0\n0xdf0, push1, 0xa\n0xdf2, push1, 0x14\n0xdf4, swap1, \n0xdf5, sload, \n0xdf6, swap1, \n0xdf7, push2, 0x100\n0xdfa, exp, \n0xdfb, swap1, \n0xdfc, div, \n0xdfd, push1, 0xff\n0xdff, and, \n0xe00, iszero, \n0xe01, push2, 0xeb4\n0xe04, jumpi, \n0xe05, push1, 0xa\n0xe07, push1, 0x0\n0xe09, swap1, \n0xe0a, sload, \n0xe0b, swap1, \n0xe0c, push2, 0x100\n0xe0f, exp, \n0xe10, swap1, \n0xe11, div, \n0xe12, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xe27, and, \n0xe28, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xe3d, and, \n0xe3e, push4, 0x18160ddd\n0xe43, push1, 0x0\n0xe45, push1, 0x40\n0xe47, mload, \n0xe48, push1, 0x20\n0xe4a, add, \n0xe4b, mstore, \n0xe4c, push1, 0x40\n0xe4e, mload, \n0xe4f, dup2, \n0xe50, push4, 0xffffffff\n0xe55, and, \n0xe56, push29, 0x100000000000000000000000000000000000000000000000000000000\n0xe74, mul, \n0xe75, dup2, \n0xe76, mstore, \n0xe77, push1, 0x4\n0xe79, add, \n0xe7a, push1, 0x20\n0xe7c, push1, 0x40\n0xe7e, mload, \n0xe7f, dup1, \n0xe80, dup4, \n0xe81, sub, \n0xe82, dup2, \n0xe83, push1, 0x0\n0xe85, dup8, \n0xe86, dup1, \n0xe87, extcodesize, \n0xe88, iszero, \n0xe89, iszero, \n0xe8a, push2, 0xe92\n0xe8d, jumpi, \n0xe8e, push1, 0x0\n0xe90, dup1, \n0xe91, revert, \n0xe92, jumpdest, \n0xe93, push2, 0x2c6\n0xe96, gas, \n0xe97, sub, \n0xe98, call, \n0xe99, iszero, \n0xe9a, iszero, \n0xe9b, push2, 0xea3\n0xe9e, jumpi, \n0xe9f, push1, 0x0\n0xea1, dup1, \n0xea2, revert, \n0xea3, jumpdest, \n0xea4, pop, \n0xea5, pop, \n0xea6, pop, \n0xea7, push1, 0x40\n0xea9, mload, \n0xeaa, dup1, \n0xeab, mload, \n0xeac, swap1, \n0xead, pop, \n0xeae, swap1, \n0xeaf, pop, \n0xeb0, push2, 0xeba\n0xeb3, jump, \n0xeb4, jumpdest, \n0xeb5, push1, 0x1\n0xeb7, sload, \n0xeb8, swap1, \n0xeb9, pop, \n0xeba, jumpdest, \n0xebb, swap1, \n0xebc, jump, \n0xebd, jumpdest, \n0xebe, push1, 0x0\n0xec0, push1, 0x14\n0xec2, swap1, \n0xec3, sload, \n0xec4, swap1, \n0xec5, push2, 0x100\n0xec8, exp, \n0xec9, swap1, \n0xeca, div, \n0xecb, push1, 0xff\n0xecd, and, \n0xece, iszero, \n0xecf, iszero, \n0xed0, iszero, \n0xed1, push2, 0xed9\n0xed4, jumpi, \n0xed5, push1, 0x0\n0xed7, dup1, \n0xed8, revert, \n0xed9, jumpdest, \n0xeda, push1, 0x6\n0xedc, push1, 0x0\n0xede, dup5, \n0xedf, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xef4, and, \n0xef5, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xf0a, and, \n0xf0b, dup2, \n0xf0c, mstore, \n0xf0d, push1, 0x20\n0xf0f, add, \n0xf10, swap1, \n0xf11, dup2, \n0xf12, mstore, \n0xf13, push1, 0x20\n0xf15, add, \n0xf16, push1, 0x0\n0xf18, sha3, \n0xf19, push1, 0x0\n0xf1b, swap1, \n0xf1c, sload, \n0xf1d, swap1, \n0xf1e, push2, 0x100\n0xf21, exp, \n0xf22, swap1, \n0xf23, div, \n0xf24, push1, 0xff\n0xf26, and, \n0xf27, iszero, \n0xf28, iszero, \n0xf29, iszero, \n0xf2a, push2, 0xf32\n0xf2d, jumpi, \n0xf2e, push1, 0x0\n0xf30, dup1, \n0xf31, revert, \n0xf32, jumpdest, \n0xf33, push1, 0xa\n0xf35, push1, 0x14\n0xf37, swap1, \n0xf38, sload, \n0xf39, swap1, \n0xf3a, push2, 0x100\n0xf3d, exp, \n0xf3e, swap1, \n0xf3f, div, \n0xf40, push1, 0xff\n0xf42, and, \n0xf43, iszero, \n0xf44, push2, 0x108c\n0xf47, jumpi, \n0xf48, push1, 0xa\n0xf4a, push1, 0x0\n0xf4c, swap1, \n0xf4d, sload, \n0xf4e, swap1, \n0xf4f, push2, 0x100\n0xf52, exp, \n0xf53, swap1, \n0xf54, div, \n0xf55, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xf6a, and, \n0xf6b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xf80, and, \n0xf81, push4, 0x8b477adb\n0xf86, caller, \n0xf87, dup6, \n0xf88, dup6, \n0xf89, dup6, \n0xf8a, push1, 0x40\n0xf8c, mload, \n0xf8d, dup6, \n0xf8e, push4, 0xffffffff\n0xf93, and, \n0xf94, push29, 0x100000000000000000000000000000000000000000000000000000000\n0xfb2, mul, \n0xfb3, dup2, \n0xfb4, mstore, \n0xfb5, push1, 0x4\n0xfb7, add, \n0xfb8, dup1, \n0xfb9, dup6, \n0xfba, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xfcf, and, \n0xfd0, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0xfe5, and, \n0xfe6, dup2, \n0xfe7, mstore, \n0xfe8, push1, 0x20\n0xfea, add, \n0xfeb, dup5, \n0xfec, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1001, and, \n0x1002, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1017, and, \n0x1018, dup2, \n0x1019, mstore, \n0x101a, push1, 0x20\n0x101c, add, \n0x101d, dup4, \n0x101e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1033, and, \n0x1034, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1049, and, \n0x104a, dup2, \n0x104b, mstore, \n0x104c, push1, 0x20\n0x104e, add, \n0x104f, dup3, \n0x1050, dup2, \n0x1051, mstore, \n0x1052, push1, 0x20\n0x1054, add, \n0x1055, swap5, \n0x1056, pop, \n0x1057, pop, \n0x1058, pop, \n0x1059, pop, \n0x105a, pop, \n0x105b, push1, 0x0\n0x105d, push1, 0x40\n0x105f, mload, \n0x1060, dup1, \n0x1061, dup4, \n0x1062, sub, \n0x1063, dup2, \n0x1064, push1, 0x0\n0x1066, dup8, \n0x1067, dup1, \n0x1068, extcodesize, \n0x1069, iszero, \n0x106a, iszero, \n0x106b, push2, 0x1073\n0x106e, jumpi, \n0x106f, push1, 0x0\n0x1071, dup1, \n0x1072, revert, \n0x1073, jumpdest, \n0x1074, push2, 0x2c6\n0x1077, gas, \n0x1078, sub, \n0x1079, call, \n0x107a, iszero, \n0x107b, iszero, \n0x107c, push2, 0x1084\n0x107f, jumpi, \n0x1080, push1, 0x0\n0x1082, dup1, \n0x1083, revert, \n0x1084, jumpdest, \n0x1085, pop, \n0x1086, pop, \n0x1087, pop, \n0x1088, push2, 0x1098\n0x108b, jump, \n0x108c, jumpdest, \n0x108d, push2, 0x1097\n0x1090, dup4, \n0x1091, dup4, \n0x1092, dup4, \n0x1093, push2, 0x21ab\n0x1096, jump, \n0x1097, jumpdest, \n0x1098, jumpdest, \n0x1099, pop, \n0x109a, pop, \n0x109b, pop, \n0x109c, jump, \n0x109d, jumpdest, \n0x109e, push1, 0xa\n0x10a0, push1, 0x0\n0x10a2, swap1, \n0x10a3, sload, \n0x10a4, swap1, \n0x10a5, push2, 0x100\n0x10a8, exp, \n0x10a9, swap1, \n0x10aa, div, \n0x10ab, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x10c0, and, \n0x10c1, dup2, \n0x10c2, jump, \n0x10c3, jumpdest, \n0x10c4, push1, 0x2\n0x10c6, push1, 0x20\n0x10c8, mstore, \n0x10c9, dup1, \n0x10ca, push1, 0x0\n0x10cc, mstore, \n0x10cd, push1, 0x40\n0x10cf, push1, 0x0\n0x10d1, sha3, \n0x10d2, push1, 0x0\n0x10d4, swap2, \n0x10d5, pop, \n0x10d6, swap1, \n0x10d7, pop, \n0x10d8, sload, \n0x10d9, dup2, \n0x10da, jump, \n0x10db, jumpdest, \n0x10dc, push1, 0x9\n0x10de, sload, \n0x10df, dup2, \n0x10e0, jump, \n0x10e1, jumpdest, \n0x10e2, push1, 0x4\n0x10e4, sload, \n0x10e5, dup2, \n0x10e6, jump, \n0x10e7, jumpdest, \n0x10e8, push1, 0x1\n0x10ea, sload, \n0x10eb, dup2, \n0x10ec, jump, \n0x10ed, jumpdest, \n0x10ee, push1, 0x0\n0x10f0, dup1, \n0x10f1, swap1, \n0x10f2, sload, \n0x10f3, swap1, \n0x10f4, push2, 0x100\n0x10f7, exp, \n0x10f8, swap1, \n0x10f9, div, \n0x10fa, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x110f, and, \n0x1110, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1125, and, \n0x1126, caller, \n0x1127, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x113c, and, \n0x113d, eq, \n0x113e, iszero, \n0x113f, iszero, \n0x1140, push2, 0x1148\n0x1143, jumpi, \n0x1144, push1, 0x0\n0x1146, dup1, \n0x1147, revert, \n0x1148, jumpdest, \n0x1149, push1, 0x0\n0x114b, push1, 0x14\n0x114d, swap1, \n0x114e, sload, \n0x114f, swap1, \n0x1150, push2, 0x100\n0x1153, exp, \n0x1154, swap1, \n0x1155, div, \n0x1156, push1, 0xff\n0x1158, and, \n0x1159, iszero, \n0x115a, iszero, \n0x115b, push2, 0x1163\n0x115e, jumpi, \n0x115f, push1, 0x0\n0x1161, dup1, \n0x1162, revert, \n0x1163, jumpdest, \n0x1164, push1, 0x0\n0x1166, dup1, \n0x1167, push1, 0x14\n0x1169, push2, 0x100\n0x116c, exp, \n0x116d, dup2, \n0x116e, sload, \n0x116f, dup2, \n0x1170, push1, 0xff\n0x1172, mul, \n0x1173, not, \n0x1174, and, \n0x1175, swap1, \n0x1176, dup4, \n0x1177, iszero, \n0x1178, iszero, \n0x1179, mul, \n0x117a, or, \n0x117b, swap1, \n0x117c, sstore, \n0x117d, pop, \n0x117e, push32, 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n0x119f, push1, 0x40\n0x11a1, mload, \n0x11a2, push1, 0x40\n0x11a4, mload, \n0x11a5, dup1, \n0x11a6, swap2, \n0x11a7, sub, \n0x11a8, swap1, \n0x11a9, log1, \n0x11aa, jump, \n0x11ab, jumpdest, \n0x11ac, push1, 0x0\n0x11ae, push1, 0x6\n0x11b0, push1, 0x0\n0x11b2, dup4, \n0x11b3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x11c8, and, \n0x11c9, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x11de, and, \n0x11df, dup2, \n0x11e0, mstore, \n0x11e1, push1, 0x20\n0x11e3, add, \n0x11e4, swap1, \n0x11e5, dup2, \n0x11e6, mstore, \n0x11e7, push1, 0x20\n0x11e9, add, \n0x11ea, push1, 0x0\n0x11ec, sha3, \n0x11ed, push1, 0x0\n0x11ef, swap1, \n0x11f0, sload, \n0x11f1, swap1, \n0x11f2, push2, 0x100\n0x11f5, exp, \n0x11f6, swap1, \n0x11f7, div, \n0x11f8, push1, 0xff\n0x11fa, and, \n0x11fb, swap1, \n0x11fc, pop, \n0x11fd, swap2, \n0x11fe, swap1, \n0x11ff, pop, \n0x1200, jump, \n0x1201, jumpdest, \n0x1202, push1, 0x5\n0x1204, push1, 0x20\n0x1206, mstore, \n0x1207, dup2, \n0x1208, push1, 0x0\n0x120a, mstore, \n0x120b, push1, 0x40\n0x120d, push1, 0x0\n0x120f, sha3, \n0x1210, push1, 0x20\n0x1212, mstore, \n0x1213, dup1, \n0x1214, push1, 0x0\n0x1216, mstore, \n0x1217, push1, 0x40\n0x1219, push1, 0x0\n0x121b, sha3, \n0x121c, push1, 0x0\n0x121e, swap2, \n0x121f, pop, \n0x1220, swap2, \n0x1221, pop, \n0x1222, pop, \n0x1223, sload, \n0x1224, dup2, \n0x1225, jump, \n0x1226, jumpdest, \n0x1227, push1, 0x0\n0x1229, push1, 0x14\n0x122b, swap1, \n0x122c, sload, \n0x122d, swap1, \n0x122e, push2, 0x100\n0x1231, exp, \n0x1232, swap1, \n0x1233, div, \n0x1234, push1, 0xff\n0x1236, and, \n0x1237, dup2, \n0x1238, jump, \n0x1239, jumpdest, \n0x123a, push1, 0x0\n0x123c, push1, 0xa\n0x123e, push1, 0x14\n0x1240, swap1, \n0x1241, sload, \n0x1242, swap1, \n0x1243, push2, 0x100\n0x1246, exp, \n0x1247, swap1, \n0x1248, div, \n0x1249, push1, 0xff\n0x124b, and, \n0x124c, iszero, \n0x124d, push2, 0x1337\n0x1250, jumpi, \n0x1251, push1, 0xa\n0x1253, push1, 0x0\n0x1255, swap1, \n0x1256, sload, \n0x1257, swap1, \n0x1258, push2, 0x100\n0x125b, exp, \n0x125c, swap1, \n0x125d, div, \n0x125e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1273, and, \n0x1274, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1289, and, \n0x128a, push4, 0x70a08231\n0x128f, dup4, \n0x1290, push1, 0x0\n0x1292, push1, 0x40\n0x1294, mload, \n0x1295, push1, 0x20\n0x1297, add, \n0x1298, mstore, \n0x1299, push1, 0x40\n0x129b, mload, \n0x129c, dup3, \n0x129d, push4, 0xffffffff\n0x12a2, and, \n0x12a3, push29, 0x100000000000000000000000000000000000000000000000000000000\n0x12c1, mul, \n0x12c2, dup2, \n0x12c3, mstore, \n0x12c4, push1, 0x4\n0x12c6, add, \n0x12c7, dup1, \n0x12c8, dup3, \n0x12c9, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x12de, and, \n0x12df, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x12f4, and, \n0x12f5, dup2, \n0x12f6, mstore, \n0x12f7, push1, 0x20\n0x12f9, add, \n0x12fa, swap2, \n0x12fb, pop, \n0x12fc, pop, \n0x12fd, push1, 0x20\n0x12ff, push1, 0x40\n0x1301, mload, \n0x1302, dup1, \n0x1303, dup4, \n0x1304, sub, \n0x1305, dup2, \n0x1306, push1, 0x0\n0x1308, dup8, \n0x1309, dup1, \n0x130a, extcodesize, \n0x130b, iszero, \n0x130c, iszero, \n0x130d, push2, 0x1315\n0x1310, jumpi, \n0x1311, push1, 0x0\n0x1313, dup1, \n0x1314, revert, \n0x1315, jumpdest, \n0x1316, push2, 0x2c6\n0x1319, gas, \n0x131a, sub, \n0x131b, call, \n0x131c, iszero, \n0x131d, iszero, \n0x131e, push2, 0x1326\n0x1321, jumpi, \n0x1322, push1, 0x0\n0x1324, dup1, \n0x1325, revert, \n0x1326, jumpdest, \n0x1327, pop, \n0x1328, pop, \n0x1329, pop, \n0x132a, push1, 0x40\n0x132c, mload, \n0x132d, dup1, \n0x132e, mload, \n0x132f, swap1, \n0x1330, pop, \n0x1331, swap1, \n0x1332, pop, \n0x1333, push2, 0x1343\n0x1336, jump, \n0x1337, jumpdest, \n0x1338, push2, 0x1340\n0x133b, dup3, \n0x133c, push2, 0x2652\n0x133f, jump, \n0x1340, jumpdest, \n0x1341, swap1, \n0x1342, pop, \n0x1343, jumpdest, \n0x1344, swap2, \n0x1345, swap1, \n0x1346, pop, \n0x1347, jump, \n0x1348, jumpdest, \n0x1349, push1, 0x0\n0x134b, dup1, \n0x134c, swap1, \n0x134d, sload, \n0x134e, swap1, \n0x134f, push2, 0x100\n0x1352, exp, \n0x1353, swap1, \n0x1354, div, \n0x1355, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x136a, and, \n0x136b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1380, and, \n0x1381, caller, \n0x1382, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1397, and, \n0x1398, eq, \n0x1399, iszero, \n0x139a, iszero, \n0x139b, push2, 0x13a3\n0x139e, jumpi, \n0x139f, push1, 0x0\n0x13a1, dup1, \n0x13a2, revert, \n0x13a3, jumpdest, \n0x13a4, push1, 0x0\n0x13a6, push1, 0x14\n0x13a8, swap1, \n0x13a9, sload, \n0x13aa, swap1, \n0x13ab, push2, 0x100\n0x13ae, exp, \n0x13af, swap1, \n0x13b0, div, \n0x13b1, push1, 0xff\n0x13b3, and, \n0x13b4, iszero, \n0x13b5, iszero, \n0x13b6, iszero, \n0x13b7, push2, 0x13bf\n0x13ba, jumpi, \n0x13bb, push1, 0x0\n0x13bd, dup1, \n0x13be, revert, \n0x13bf, jumpdest, \n0x13c0, push1, 0x1\n0x13c2, push1, 0x0\n0x13c4, push1, 0x14\n0x13c6, push2, 0x100\n0x13c9, exp, \n0x13ca, dup2, \n0x13cb, sload, \n0x13cc, dup2, \n0x13cd, push1, 0xff\n0x13cf, mul, \n0x13d0, not, \n0x13d1, and, \n0x13d2, swap1, \n0x13d3, dup4, \n0x13d4, iszero, \n0x13d5, iszero, \n0x13d6, mul, \n0x13d7, or, \n0x13d8, swap1, \n0x13d9, sstore, \n0x13da, pop, \n0x13db, push32, 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n0x13fc, push1, 0x40\n0x13fe, mload, \n0x13ff, push1, 0x40\n0x1401, mload, \n0x1402, dup1, \n0x1403, swap2, \n0x1404, sub, \n0x1405, swap1, \n0x1406, log1, \n0x1407, jump, \n0x1408, jumpdest, \n0x1409, push1, 0x0\n0x140b, dup1, \n0x140c, push1, 0x0\n0x140e, swap1, \n0x140f, sload, \n0x1410, swap1, \n0x1411, push2, 0x100\n0x1414, exp, \n0x1415, swap1, \n0x1416, div, \n0x1417, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x142c, and, \n0x142d, swap1, \n0x142e, pop, \n0x142f, swap1, \n0x1430, jump, \n0x1431, jumpdest, \n0x1432, push1, 0x0\n0x1434, dup1, \n0x1435, swap1, \n0x1436, sload, \n0x1437, swap1, \n0x1438, push2, 0x100\n0x143b, exp, \n0x143c, swap1, \n0x143d, div, \n0x143e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1453, and, \n0x1454, dup2, \n0x1455, jump, \n0x1456, jumpdest, \n0x1457, push1, 0x8\n0x1459, dup1, \n0x145a, sload, \n0x145b, push1, 0x1\n0x145d, dup2, \n0x145e, push1, 0x1\n0x1460, and, \n0x1461, iszero, \n0x1462, push2, 0x100\n0x1465, mul, \n0x1466, sub, \n0x1467, and, \n0x1468, push1, 0x2\n0x146a, swap1, \n0x146b, div, \n0x146c, dup1, \n0x146d, push1, 0x1f\n0x146f, add, \n0x1470, push1, 0x20\n0x1472, dup1, \n0x1473, swap2, \n0x1474, div, \n0x1475, mul, \n0x1476, push1, 0x20\n0x1478, add, \n0x1479, push1, 0x40\n0x147b, mload, \n0x147c, swap1, \n0x147d, dup2, \n0x147e, add, \n0x147f, push1, 0x40\n0x1481, mstore, \n0x1482, dup1, \n0x1483, swap3, \n0x1484, swap2, \n0x1485, swap1, \n0x1486, dup2, \n0x1487, dup2, \n0x1488, mstore, \n0x1489, push1, 0x20\n0x148b, add, \n0x148c, dup3, \n0x148d, dup1, \n0x148e, sload, \n0x148f, push1, 0x1\n0x1491, dup2, \n0x1492, push1, 0x1\n0x1494, and, \n0x1495, iszero, \n0x1496, push2, 0x100\n0x1499, mul, \n0x149a, sub, \n0x149b, and, \n0x149c, push1, 0x2\n0x149e, swap1, \n0x149f, div, \n0x14a0, dup1, \n0x14a1, iszero, \n0x14a2, push2, 0x14ec\n0x14a5, jumpi, \n0x14a6, dup1, \n0x14a7, push1, 0x1f\n0x14a9, lt, \n0x14aa, push2, 0x14c1\n0x14ad, jumpi, \n0x14ae, push2, 0x100\n0x14b1, dup1, \n0x14b2, dup4, \n0x14b3, sload, \n0x14b4, div, \n0x14b5, mul, \n0x14b6, dup4, \n0x14b7, mstore, \n0x14b8, swap2, \n0x14b9, push1, 0x20\n0x14bb, add, \n0x14bc, swap2, \n0x14bd, push2, 0x14ec\n0x14c0, jump, \n0x14c1, jumpdest, \n0x14c2, dup3, \n0x14c3, add, \n0x14c4, swap2, \n0x14c5, swap1, \n0x14c6, push1, 0x0\n0x14c8, mstore, \n0x14c9, push1, 0x20\n0x14cb, push1, 0x0\n0x14cd, sha3, \n0x14ce, swap1, \n0x14cf, jumpdest, \n0x14d0, dup2, \n0x14d1, sload, \n0x14d2, dup2, \n0x14d3, mstore, \n0x14d4, swap1, \n0x14d5, push1, 0x1\n0x14d7, add, \n0x14d8, swap1, \n0x14d9, push1, 0x20\n0x14db, add, \n0x14dc, dup1, \n0x14dd, dup4, \n0x14de, gt, \n0x14df, push2, 0x14cf\n0x14e2, jumpi, \n0x14e3, dup3, \n0x14e4, swap1, \n0x14e5, sub, \n0x14e6, push1, 0x1f\n0x14e8, and, \n0x14e9, dup3, \n0x14ea, add, \n0x14eb, swap2, \n0x14ec, jumpdest, \n0x14ed, pop, \n0x14ee, pop, \n0x14ef, pop, \n0x14f0, pop, \n0x14f1, pop, \n0x14f2, dup2, \n0x14f3, jump, \n0x14f4, jumpdest, \n0x14f5, push1, 0x0\n0x14f7, push1, 0x14\n0x14f9, swap1, \n0x14fa, sload, \n0x14fb, swap1, \n0x14fc, push2, 0x100\n0x14ff, exp, \n0x1500, swap1, \n0x1501, div, \n0x1502, push1, 0xff\n0x1504, and, \n0x1505, iszero, \n0x1506, iszero, \n0x1507, iszero, \n0x1508, push2, 0x1510\n0x150b, jumpi, \n0x150c, push1, 0x0\n0x150e, dup1, \n0x150f, revert, \n0x1510, jumpdest, \n0x1511, push1, 0x6\n0x1513, push1, 0x0\n0x1515, caller, \n0x1516, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x152b, and, \n0x152c, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1541, and, \n0x1542, dup2, \n0x1543, mstore, \n0x1544, push1, 0x20\n0x1546, add, \n0x1547, swap1, \n0x1548, dup2, \n0x1549, mstore, \n0x154a, push1, 0x20\n0x154c, add, \n0x154d, push1, 0x0\n0x154f, sha3, \n0x1550, push1, 0x0\n0x1552, swap1, \n0x1553, sload, \n0x1554, swap1, \n0x1555, push2, 0x100\n0x1558, exp, \n0x1559, swap1, \n0x155a, div, \n0x155b, push1, 0xff\n0x155d, and, \n0x155e, iszero, \n0x155f, iszero, \n0x1560, iszero, \n0x1561, push2, 0x1569\n0x1564, jumpi, \n0x1565, push1, 0x0\n0x1567, dup1, \n0x1568, revert, \n0x1569, jumpdest, \n0x156a, push1, 0xa\n0x156c, push1, 0x14\n0x156e, swap1, \n0x156f, sload, \n0x1570, swap1, \n0x1571, push2, 0x100\n0x1574, exp, \n0x1575, swap1, \n0x1576, div, \n0x1577, push1, 0xff\n0x1579, and, \n0x157a, iszero, \n0x157b, push2, 0x168f\n0x157e, jumpi, \n0x157f, push1, 0xa\n0x1581, push1, 0x0\n0x1583, swap1, \n0x1584, sload, \n0x1585, swap1, \n0x1586, push2, 0x100\n0x1589, exp, \n0x158a, swap1, \n0x158b, div, \n0x158c, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x15a1, and, \n0x15a2, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x15b7, and, \n0x15b8, push4, 0x6e18980a\n0x15bd, caller, \n0x15be, dup5, \n0x15bf, dup5, \n0x15c0, push1, 0x40\n0x15c2, mload, \n0x15c3, dup5, \n0x15c4, push4, 0xffffffff\n0x15c9, and, \n0x15ca, push29, 0x100000000000000000000000000000000000000000000000000000000\n0x15e8, mul, \n0x15e9, dup2, \n0x15ea, mstore, \n0x15eb, push1, 0x4\n0x15ed, add, \n0x15ee, dup1, \n0x15ef, dup5, \n0x15f0, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1605, and, \n0x1606, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x161b, and, \n0x161c, dup2, \n0x161d, mstore, \n0x161e, push1, 0x20\n0x1620, add, \n0x1621, dup4, \n0x1622, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1637, and, \n0x1638, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x164d, and, \n0x164e, dup2, \n0x164f, mstore, \n0x1650, push1, 0x20\n0x1652, add, \n0x1653, dup3, \n0x1654, dup2, \n0x1655, mstore, \n0x1656, push1, 0x20\n0x1658, add, \n0x1659, swap4, \n0x165a, pop, \n0x165b, pop, \n0x165c, pop, \n0x165d, pop, \n0x165e, push1, 0x0\n0x1660, push1, 0x40\n0x1662, mload, \n0x1663, dup1, \n0x1664, dup4, \n0x1665, sub, \n0x1666, dup2, \n0x1667, push1, 0x0\n0x1669, dup8, \n0x166a, dup1, \n0x166b, extcodesize, \n0x166c, iszero, \n0x166d, iszero, \n0x166e, push2, 0x1676\n0x1671, jumpi, \n0x1672, push1, 0x0\n0x1674, dup1, \n0x1675, revert, \n0x1676, jumpdest, \n0x1677, push2, 0x2c6\n0x167a, gas, \n0x167b, sub, \n0x167c, call, \n0x167d, iszero, \n0x167e, iszero, \n0x167f, push2, 0x1687\n0x1682, jumpi, \n0x1683, push1, 0x0\n0x1685, dup1, \n0x1686, revert, \n0x1687, jumpdest, \n0x1688, pop, \n0x1689, pop, \n0x168a, pop, \n0x168b, push2, 0x169a\n0x168e, jump, \n0x168f, jumpdest, \n0x1690, push2, 0x1699\n0x1693, dup3, \n0x1694, dup3, \n0x1695, push2, 0x269b\n0x1698, jump, \n0x1699, jumpdest, \n0x169a, jumpdest, \n0x169b, pop, \n0x169c, pop, \n0x169d, jump, \n0x169e, jumpdest, \n0x169f, push1, 0x0\n0x16a1, dup1, \n0x16a2, swap1, \n0x16a3, sload, \n0x16a4, swap1, \n0x16a5, push2, 0x100\n0x16a8, exp, \n0x16a9, swap1, \n0x16aa, div, \n0x16ab, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x16c0, and, \n0x16c1, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x16d6, and, \n0x16d7, caller, \n0x16d8, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x16ed, and, \n0x16ee, eq, \n0x16ef, iszero, \n0x16f0, iszero, \n0x16f1, push2, 0x16f9\n0x16f4, jumpi, \n0x16f5, push1, 0x0\n0x16f7, dup1, \n0x16f8, revert, \n0x16f9, jumpdest, \n0x16fa, push1, 0x14\n0x16fc, dup3, \n0x16fd, lt, \n0x16fe, iszero, \n0x16ff, iszero, \n0x1700, push2, 0x1708\n0x1703, jumpi, \n0x1704, push1, 0x0\n0x1706, dup1, \n0x1707, revert, \n0x1708, jumpdest, \n0x1709, push1, 0x32\n0x170b, dup2, \n0x170c, lt, \n0x170d, iszero, \n0x170e, iszero, \n0x170f, push2, 0x1717\n0x1712, jumpi, \n0x1713, push1, 0x0\n0x1715, dup1, \n0x1716, revert, \n0x1717, jumpdest, \n0x1718, dup2, \n0x1719, push1, 0x3\n0x171b, dup2, \n0x171c, swap1, \n0x171d, sstore, \n0x171e, pop, \n0x171f, push2, 0x1736\n0x1722, push1, 0x9\n0x1724, sload, \n0x1725, push1, 0xa\n0x1727, exp, \n0x1728, dup3, \n0x1729, push2, 0x2a03\n0x172c, swap1, \n0x172d, swap2, \n0x172e, swap1, \n0x172f, push4, 0xffffffff\n0x1734, and, \n0x1735, jump, \n0x1736, jumpdest, \n0x1737, push1, 0x4\n0x1739, dup2, \n0x173a, swap1, \n0x173b, sstore, \n0x173c, pop, \n0x173d, push32, 0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n0x175e, push1, 0x3\n0x1760, sload, \n0x1761, push1, 0x4\n0x1763, sload, \n0x1764, push1, 0x40\n0x1766, mload, \n0x1767, dup1, \n0x1768, dup4, \n0x1769, dup2, \n0x176a, mstore, \n0x176b, push1, 0x20\n0x176d, add, \n0x176e, dup3, \n0x176f, dup2, \n0x1770, mstore, \n0x1771, push1, 0x20\n0x1773, add, \n0x1774, swap3, \n0x1775, pop, \n0x1776, pop, \n0x1777, pop, \n0x1778, push1, 0x40\n0x177a, mload, \n0x177b, dup1, \n0x177c, swap2, \n0x177d, sub, \n0x177e, swap1, \n0x177f, log1, \n0x1780, pop, \n0x1781, pop, \n0x1782, jump, \n0x1783, jumpdest, \n0x1784, push1, 0x0\n0x1786, dup1, \n0x1787, swap1, \n0x1788, sload, \n0x1789, swap1, \n0x178a, push2, 0x100\n0x178d, exp, \n0x178e, swap1, \n0x178f, div, \n0x1790, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x17a5, and, \n0x17a6, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x17bb, and, \n0x17bc, caller, \n0x17bd, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x17d2, and, \n0x17d3, eq, \n0x17d4, iszero, \n0x17d5, iszero, \n0x17d6, push2, 0x17de\n0x17d9, jumpi, \n0x17da, push1, 0x0\n0x17dc, dup1, \n0x17dd, revert, \n0x17de, jumpdest, \n0x17df, push1, 0x1\n0x17e1, sload, \n0x17e2, dup2, \n0x17e3, push1, 0x1\n0x17e5, sload, \n0x17e6, add, \n0x17e7, gt, \n0x17e8, iszero, \n0x17e9, iszero, \n0x17ea, push2, 0x17f2\n0x17ed, jumpi, \n0x17ee, push1, 0x0\n0x17f0, dup1, \n0x17f1, revert, \n0x17f2, jumpdest, \n0x17f3, push1, 0x2\n0x17f5, push1, 0x0\n0x17f7, dup1, \n0x17f8, push1, 0x0\n0x17fa, swap1, \n0x17fb, sload, \n0x17fc, swap1, \n0x17fd, push2, 0x100\n0x1800, exp, \n0x1801, swap1, \n0x1802, div, \n0x1803, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1818, and, \n0x1819, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x182e, and, \n0x182f, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1844, and, \n0x1845, dup2, \n0x1846, mstore, \n0x1847, push1, 0x20\n0x1849, add, \n0x184a, swap1, \n0x184b, dup2, \n0x184c, mstore, \n0x184d, push1, 0x20\n0x184f, add, \n0x1850, push1, 0x0\n0x1852, sha3, \n0x1853, sload, \n0x1854, dup2, \n0x1855, push1, 0x2\n0x1857, push1, 0x0\n0x1859, dup1, \n0x185a, push1, 0x0\n0x185c, swap1, \n0x185d, sload, \n0x185e, swap1, \n0x185f, push2, 0x100\n0x1862, exp, \n0x1863, swap1, \n0x1864, div, \n0x1865, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x187a, and, \n0x187b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1890, and, \n0x1891, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x18a6, and, \n0x18a7, dup2, \n0x18a8, mstore, \n0x18a9, push1, 0x20\n0x18ab, add, \n0x18ac, swap1, \n0x18ad, dup2, \n0x18ae, mstore, \n0x18af, push1, 0x20\n0x18b1, add, \n0x18b2, push1, 0x0\n0x18b4, sha3, \n0x18b5, sload, \n0x18b6, add, \n0x18b7, gt, \n0x18b8, iszero, \n0x18b9, iszero, \n0x18ba, push2, 0x18c2\n0x18bd, jumpi, \n0x18be, push1, 0x0\n0x18c0, dup1, \n0x18c1, revert, \n0x18c2, jumpdest, \n0x18c3, dup1, \n0x18c4, push1, 0x2\n0x18c6, push1, 0x0\n0x18c8, dup1, \n0x18c9, push1, 0x0\n0x18cb, swap1, \n0x18cc, sload, \n0x18cd, swap1, \n0x18ce, push2, 0x100\n0x18d1, exp, \n0x18d2, swap1, \n0x18d3, div, \n0x18d4, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x18e9, and, \n0x18ea, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x18ff, and, \n0x1900, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1915, and, \n0x1916, dup2, \n0x1917, mstore, \n0x1918, push1, 0x20\n0x191a, add, \n0x191b, swap1, \n0x191c, dup2, \n0x191d, mstore, \n0x191e, push1, 0x20\n0x1920, add, \n0x1921, push1, 0x0\n0x1923, sha3, \n0x1924, push1, 0x0\n0x1926, dup3, \n0x1927, dup3, \n0x1928, sload, \n0x1929, add, \n0x192a, swap3, \n0x192b, pop, \n0x192c, pop, \n0x192d, dup2, \n0x192e, swap1, \n0x192f, sstore, \n0x1930, pop, \n0x1931, dup1, \n0x1932, push1, 0x1\n0x1934, push1, 0x0\n0x1936, dup3, \n0x1937, dup3, \n0x1938, sload, \n0x1939, add, \n0x193a, swap3, \n0x193b, pop, \n0x193c, pop, \n0x193d, dup2, \n0x193e, swap1, \n0x193f, sstore, \n0x1940, pop, \n0x1941, push32, 0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n0x1962, dup2, \n0x1963, push1, 0x40\n0x1965, mload, \n0x1966, dup1, \n0x1967, dup3, \n0x1968, dup2, \n0x1969, mstore, \n0x196a, push1, 0x20\n0x196c, add, \n0x196d, swap2, \n0x196e, pop, \n0x196f, pop, \n0x1970, push1, 0x40\n0x1972, mload, \n0x1973, dup1, \n0x1974, swap2, \n0x1975, sub, \n0x1976, swap1, \n0x1977, log1, \n0x1978, pop, \n0x1979, jump, \n0x197a, jumpdest, \n0x197b, push1, 0x0\n0x197d, dup1, \n0x197e, swap1, \n0x197f, sload, \n0x1980, swap1, \n0x1981, push2, 0x100\n0x1984, exp, \n0x1985, swap1, \n0x1986, div, \n0x1987, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x199c, and, \n0x199d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x19b2, and, \n0x19b3, caller, \n0x19b4, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x19c9, and, \n0x19ca, eq, \n0x19cb, iszero, \n0x19cc, iszero, \n0x19cd, push2, 0x19d5\n0x19d0, jumpi, \n0x19d1, push1, 0x0\n0x19d3, dup1, \n0x19d4, revert, \n0x19d5, jumpdest, \n0x19d6, dup1, \n0x19d7, push1, 0x1\n0x19d9, sload, \n0x19da, lt, \n0x19db, iszero, \n0x19dc, iszero, \n0x19dd, iszero, \n0x19de, push2, 0x19e6\n0x19e1, jumpi, \n0x19e2, push1, 0x0\n0x19e4, dup1, \n0x19e5, revert, \n0x19e6, jumpdest, \n0x19e7, dup1, \n0x19e8, push1, 0x2\n0x19ea, push1, 0x0\n0x19ec, dup1, \n0x19ed, push1, 0x0\n0x19ef, swap1, \n0x19f0, sload, \n0x19f1, swap1, \n0x19f2, push2, 0x100\n0x19f5, exp, \n0x19f6, swap1, \n0x19f7, div, \n0x19f8, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1a0d, and, \n0x1a0e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1a23, and, \n0x1a24, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1a39, and, \n0x1a3a, dup2, \n0x1a3b, mstore, \n0x1a3c, push1, 0x20\n0x1a3e, add, \n0x1a3f, swap1, \n0x1a40, dup2, \n0x1a41, mstore, \n0x1a42, push1, 0x20\n0x1a44, add, \n0x1a45, push1, 0x0\n0x1a47, sha3, \n0x1a48, sload, \n0x1a49, lt, \n0x1a4a, iszero, \n0x1a4b, iszero, \n0x1a4c, iszero, \n0x1a4d, push2, 0x1a55\n0x1a50, jumpi, \n0x1a51, push1, 0x0\n0x1a53, dup1, \n0x1a54, revert, \n0x1a55, jumpdest, \n0x1a56, dup1, \n0x1a57, push1, 0x1\n0x1a59, push1, 0x0\n0x1a5b, dup3, \n0x1a5c, dup3, \n0x1a5d, sload, \n0x1a5e, sub, \n0x1a5f, swap3, \n0x1a60, pop, \n0x1a61, pop, \n0x1a62, dup2, \n0x1a63, swap1, \n0x1a64, sstore, \n0x1a65, pop, \n0x1a66, dup1, \n0x1a67, push1, 0x2\n0x1a69, push1, 0x0\n0x1a6b, dup1, \n0x1a6c, push1, 0x0\n0x1a6e, swap1, \n0x1a6f, sload, \n0x1a70, swap1, \n0x1a71, push2, 0x100\n0x1a74, exp, \n0x1a75, swap1, \n0x1a76, div, \n0x1a77, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1a8c, and, \n0x1a8d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1aa2, and, \n0x1aa3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1ab8, and, \n0x1ab9, dup2, \n0x1aba, mstore, \n0x1abb, push1, 0x20\n0x1abd, add, \n0x1abe, swap1, \n0x1abf, dup2, \n0x1ac0, mstore, \n0x1ac1, push1, 0x20\n0x1ac3, add, \n0x1ac4, push1, 0x0\n0x1ac6, sha3, \n0x1ac7, push1, 0x0\n0x1ac9, dup3, \n0x1aca, dup3, \n0x1acb, sload, \n0x1acc, sub, \n0x1acd, swap3, \n0x1ace, pop, \n0x1acf, pop, \n0x1ad0, dup2, \n0x1ad1, swap1, \n0x1ad2, sstore, \n0x1ad3, pop, \n0x1ad4, push32, 0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n0x1af5, dup2, \n0x1af6, push1, 0x40\n0x1af8, mload, \n0x1af9, dup1, \n0x1afa, dup3, \n0x1afb, dup2, \n0x1afc, mstore, \n0x1afd, push1, 0x20\n0x1aff, add, \n0x1b00, swap2, \n0x1b01, pop, \n0x1b02, pop, \n0x1b03, push1, 0x40\n0x1b05, mload, \n0x1b06, dup1, \n0x1b07, swap2, \n0x1b08, sub, \n0x1b09, swap1, \n0x1b0a, log1, \n0x1b0b, pop, \n0x1b0c, jump, \n0x1b0d, jumpdest, \n0x1b0e, push1, 0x0\n0x1b10, push1, 0xa\n0x1b12, push1, 0x14\n0x1b14, swap1, \n0x1b15, sload, \n0x1b16, swap1, \n0x1b17, push2, 0x100\n0x1b1a, exp, \n0x1b1b, swap1, \n0x1b1c, div, \n0x1b1d, push1, 0xff\n0x1b1f, and, \n0x1b20, iszero, \n0x1b21, push2, 0x1c3f\n0x1b24, jumpi, \n0x1b25, push1, 0xa\n0x1b27, push1, 0x0\n0x1b29, swap1, \n0x1b2a, sload, \n0x1b2b, swap1, \n0x1b2c, push2, 0x100\n0x1b2f, exp, \n0x1b30, swap1, \n0x1b31, div, \n0x1b32, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1b47, and, \n0x1b48, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1b5d, and, \n0x1b5e, push4, 0xdd62ed3e\n0x1b63, dup5, \n0x1b64, dup5, \n0x1b65, push1, 0x0\n0x1b67, push1, 0x40\n0x1b69, mload, \n0x1b6a, push1, 0x20\n0x1b6c, add, \n0x1b6d, mstore, \n0x1b6e, push1, 0x40\n0x1b70, mload, \n0x1b71, dup4, \n0x1b72, push4, 0xffffffff\n0x1b77, and, \n0x1b78, push29, 0x100000000000000000000000000000000000000000000000000000000\n0x1b96, mul, \n0x1b97, dup2, \n0x1b98, mstore, \n0x1b99, push1, 0x4\n0x1b9b, add, \n0x1b9c, dup1, \n0x1b9d, dup4, \n0x1b9e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1bb3, and, \n0x1bb4, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1bc9, and, \n0x1bca, dup2, \n0x1bcb, mstore, \n0x1bcc, push1, 0x20\n0x1bce, add, \n0x1bcf, dup3, \n0x1bd0, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1be5, and, \n0x1be6, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1bfb, and, \n0x1bfc, dup2, \n0x1bfd, mstore, \n0x1bfe, push1, 0x20\n0x1c00, add, \n0x1c01, swap3, \n0x1c02, pop, \n0x1c03, pop, \n0x1c04, pop, \n0x1c05, push1, 0x20\n0x1c07, push1, 0x40\n0x1c09, mload, \n0x1c0a, dup1, \n0x1c0b, dup4, \n0x1c0c, sub, \n0x1c0d, dup2, \n0x1c0e, push1, 0x0\n0x1c10, dup8, \n0x1c11, dup1, \n0x1c12, extcodesize, \n0x1c13, iszero, \n0x1c14, iszero, \n0x1c15, push2, 0x1c1d\n0x1c18, jumpi, \n0x1c19, push1, 0x0\n0x1c1b, dup1, \n0x1c1c, revert, \n0x1c1d, jumpdest, \n0x1c1e, push2, 0x2c6\n0x1c21, gas, \n0x1c22, sub, \n0x1c23, call, \n0x1c24, iszero, \n0x1c25, iszero, \n0x1c26, push2, 0x1c2e\n0x1c29, jumpi, \n0x1c2a, push1, 0x0\n0x1c2c, dup1, \n0x1c2d, revert, \n0x1c2e, jumpdest, \n0x1c2f, pop, \n0x1c30, pop, \n0x1c31, pop, \n0x1c32, push1, 0x40\n0x1c34, mload, \n0x1c35, dup1, \n0x1c36, mload, \n0x1c37, swap1, \n0x1c38, pop, \n0x1c39, swap1, \n0x1c3a, pop, \n0x1c3b, push2, 0x1c4c\n0x1c3e, jump, \n0x1c3f, jumpdest, \n0x1c40, push2, 0x1c49\n0x1c43, dup4, \n0x1c44, dup4, \n0x1c45, push2, 0x2a3e\n0x1c48, jump, \n0x1c49, jumpdest, \n0x1c4a, swap1, \n0x1c4b, pop, \n0x1c4c, jumpdest, \n0x1c4d, swap3, \n0x1c4e, swap2, \n0x1c4f, pop, \n0x1c50, pop, \n0x1c51, jump, \n0x1c52, jumpdest, \n0x1c53, push1, 0x3\n0x1c55, sload, \n0x1c56, dup2, \n0x1c57, jump, \n0x1c58, jumpdest, \n0x1c59, push1, 0x6\n0x1c5b, push1, 0x20\n0x1c5d, mstore, \n0x1c5e, dup1, \n0x1c5f, push1, 0x0\n0x1c61, mstore, \n0x1c62, push1, 0x40\n0x1c64, push1, 0x0\n0x1c66, sha3, \n0x1c67, push1, 0x0\n0x1c69, swap2, \n0x1c6a, pop, \n0x1c6b, sload, \n0x1c6c, swap1, \n0x1c6d, push2, 0x100\n0x1c70, exp, \n0x1c71, swap1, \n0x1c72, div, \n0x1c73, push1, 0xff\n0x1c75, and, \n0x1c76, dup2, \n0x1c77, jump, \n0x1c78, jumpdest, \n0x1c79, push1, 0x0\n0x1c7b, dup1, \n0x1c7c, swap1, \n0x1c7d, sload, \n0x1c7e, swap1, \n0x1c7f, push2, 0x100\n0x1c82, exp, \n0x1c83, swap1, \n0x1c84, div, \n0x1c85, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1c9a, and, \n0x1c9b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1cb0, and, \n0x1cb1, caller, \n0x1cb2, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1cc7, and, \n0x1cc8, eq, \n0x1cc9, iszero, \n0x1cca, iszero, \n0x1ccb, push2, 0x1cd3\n0x1cce, jumpi, \n0x1ccf, push1, 0x0\n0x1cd1, dup1, \n0x1cd2, revert, \n0x1cd3, jumpdest, \n0x1cd4, push1, 0x0\n0x1cd6, push1, 0x6\n0x1cd8, push1, 0x0\n0x1cda, dup4, \n0x1cdb, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1cf0, and, \n0x1cf1, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1d06, and, \n0x1d07, dup2, \n0x1d08, mstore, \n0x1d09, push1, 0x20\n0x1d0b, add, \n0x1d0c, swap1, \n0x1d0d, dup2, \n0x1d0e, mstore, \n0x1d0f, push1, 0x20\n0x1d11, add, \n0x1d12, push1, 0x0\n0x1d14, sha3, \n0x1d15, push1, 0x0\n0x1d17, push2, 0x100\n0x1d1a, exp, \n0x1d1b, dup2, \n0x1d1c, sload, \n0x1d1d, dup2, \n0x1d1e, push1, 0xff\n0x1d20, mul, \n0x1d21, not, \n0x1d22, and, \n0x1d23, swap1, \n0x1d24, dup4, \n0x1d25, iszero, \n0x1d26, iszero, \n0x1d27, mul, \n0x1d28, or, \n0x1d29, swap1, \n0x1d2a, sstore, \n0x1d2b, pop, \n0x1d2c, push32, 0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n0x1d4d, dup2, \n0x1d4e, push1, 0x40\n0x1d50, mload, \n0x1d51, dup1, \n0x1d52, dup3, \n0x1d53, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1d68, and, \n0x1d69, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1d7e, and, \n0x1d7f, dup2, \n0x1d80, mstore, \n0x1d81, push1, 0x20\n0x1d83, add, \n0x1d84, swap2, \n0x1d85, pop, \n0x1d86, pop, \n0x1d87, push1, 0x40\n0x1d89, mload, \n0x1d8a, dup1, \n0x1d8b, swap2, \n0x1d8c, sub, \n0x1d8d, swap1, \n0x1d8e, log1, \n0x1d8f, pop, \n0x1d90, jump, \n0x1d91, jumpdest, \n0x1d92, push32, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n0x1db3, dup2, \n0x1db4, jump, \n0x1db5, jumpdest, \n0x1db6, push1, 0x0\n0x1db8, dup1, \n0x1db9, swap1, \n0x1dba, sload, \n0x1dbb, swap1, \n0x1dbc, push2, 0x100\n0x1dbf, exp, \n0x1dc0, swap1, \n0x1dc1, div, \n0x1dc2, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1dd7, and, \n0x1dd8, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1ded, and, \n0x1dee, caller, \n0x1def, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1e04, and, \n0x1e05, eq, \n0x1e06, iszero, \n0x1e07, iszero, \n0x1e08, push2, 0x1e10\n0x1e0b, jumpi, \n0x1e0c, push1, 0x0\n0x1e0e, dup1, \n0x1e0f, revert, \n0x1e10, jumpdest, \n0x1e11, push1, 0x0\n0x1e13, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1e28, and, \n0x1e29, dup2, \n0x1e2a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1e3f, and, \n0x1e40, eq, \n0x1e41, iszero, \n0x1e42, iszero, \n0x1e43, push2, 0x1e87\n0x1e46, jumpi, \n0x1e47, dup1, \n0x1e48, push1, 0x0\n0x1e4a, dup1, \n0x1e4b, push2, 0x100\n0x1e4e, exp, \n0x1e4f, dup2, \n0x1e50, sload, \n0x1e51, dup2, \n0x1e52, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1e67, mul, \n0x1e68, not, \n0x1e69, and, \n0x1e6a, swap1, \n0x1e6b, dup4, \n0x1e6c, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1e81, and, \n0x1e82, mul, \n0x1e83, or, \n0x1e84, swap1, \n0x1e85, sstore, \n0x1e86, pop, \n0x1e87, jumpdest, \n0x1e88, pop, \n0x1e89, jump, \n0x1e8a, jumpdest, \n0x1e8b, push1, 0x0\n0x1e8d, dup1, \n0x1e8e, push1, 0x0\n0x1e90, swap1, \n0x1e91, sload, \n0x1e92, swap1, \n0x1e93, push2, 0x100\n0x1e96, exp, \n0x1e97, swap1, \n0x1e98, div, \n0x1e99, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1eae, and, \n0x1eaf, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1ec4, and, \n0x1ec5, caller, \n0x1ec6, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1edb, and, \n0x1edc, eq, \n0x1edd, iszero, \n0x1ede, iszero, \n0x1edf, push2, 0x1ee7\n0x1ee2, jumpi, \n0x1ee3, push1, 0x0\n0x1ee5, dup1, \n0x1ee6, revert, \n0x1ee7, jumpdest, \n0x1ee8, push1, 0x6\n0x1eea, push1, 0x0\n0x1eec, dup4, \n0x1eed, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1f02, and, \n0x1f03, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1f18, and, \n0x1f19, dup2, \n0x1f1a, mstore, \n0x1f1b, push1, 0x20\n0x1f1d, add, \n0x1f1e, swap1, \n0x1f1f, dup2, \n0x1f20, mstore, \n0x1f21, push1, 0x20\n0x1f23, add, \n0x1f24, push1, 0x0\n0x1f26, sha3, \n0x1f27, push1, 0x0\n0x1f29, swap1, \n0x1f2a, sload, \n0x1f2b, swap1, \n0x1f2c, push2, 0x100\n0x1f2f, exp, \n0x1f30, swap1, \n0x1f31, div, \n0x1f32, push1, 0xff\n0x1f34, and, \n0x1f35, iszero, \n0x1f36, iszero, \n0x1f37, push2, 0x1f3f\n0x1f3a, jumpi, \n0x1f3b, push1, 0x0\n0x1f3d, dup1, \n0x1f3e, revert, \n0x1f3f, jumpdest, \n0x1f40, push2, 0x1f48\n0x1f43, dup3, \n0x1f44, push2, 0x1239\n0x1f47, jump, \n0x1f48, jumpdest, \n0x1f49, swap1, \n0x1f4a, pop, \n0x1f4b, push1, 0x0\n0x1f4d, push1, 0x2\n0x1f4f, push1, 0x0\n0x1f51, dup5, \n0x1f52, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1f67, and, \n0x1f68, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1f7d, and, \n0x1f7e, dup2, \n0x1f7f, mstore, \n0x1f80, push1, 0x20\n0x1f82, add, \n0x1f83, swap1, \n0x1f84, dup2, \n0x1f85, mstore, \n0x1f86, push1, 0x20\n0x1f88, add, \n0x1f89, push1, 0x0\n0x1f8b, sha3, \n0x1f8c, dup2, \n0x1f8d, swap1, \n0x1f8e, sstore, \n0x1f8f, pop, \n0x1f90, dup1, \n0x1f91, push1, 0x1\n0x1f93, push1, 0x0\n0x1f95, dup3, \n0x1f96, dup3, \n0x1f97, sload, \n0x1f98, sub, \n0x1f99, swap3, \n0x1f9a, pop, \n0x1f9b, pop, \n0x1f9c, dup2, \n0x1f9d, swap1, \n0x1f9e, sstore, \n0x1f9f, pop, \n0x1fa0, push32, 0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n0x1fc1, dup3, \n0x1fc2, dup3, \n0x1fc3, push1, 0x40\n0x1fc5, mload, \n0x1fc6, dup1, \n0x1fc7, dup4, \n0x1fc8, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1fdd, and, \n0x1fde, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x1ff3, and, \n0x1ff4, dup2, \n0x1ff5, mstore, \n0x1ff6, push1, 0x20\n0x1ff8, add, \n0x1ff9, dup3, \n0x1ffa, dup2, \n0x1ffb, mstore, \n0x1ffc, push1, 0x20\n0x1ffe, add, \n0x1fff, swap3, \n0x2000, pop, \n0x2001, pop, \n0x2002, pop, \n0x2003, push1, 0x40\n0x2005, mload, \n0x2006, dup1, \n0x2007, swap2, \n0x2008, sub, \n0x2009, swap1, \n0x200a, log1, \n0x200b, pop, \n0x200c, pop, \n0x200d, jump, \n0x200e, jumpdest, \n0x200f, push1, 0x40\n0x2011, push1, 0x4\n0x2013, dup2, \n0x2014, add, \n0x2015, push1, 0x0\n0x2017, calldatasize, \n0x2018, swap1, \n0x2019, pop, \n0x201a, lt, \n0x201b, iszero, \n0x201c, iszero, \n0x201d, iszero, \n0x201e, push2, 0x2026\n0x2021, jumpi, \n0x2022, push1, 0x0\n0x2024, dup1, \n0x2025, revert, \n0x2026, jumpdest, \n0x2027, push1, 0x0\n0x2029, dup3, \n0x202a, eq, \n0x202b, iszero, \n0x202c, dup1, \n0x202d, iszero, \n0x202e, push2, 0x20b4\n0x2031, jumpi, \n0x2032, pop, \n0x2033, push1, 0x0\n0x2035, push1, 0x5\n0x2037, push1, 0x0\n0x2039, caller, \n0x203a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x204f, and, \n0x2050, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2065, and, \n0x2066, dup2, \n0x2067, mstore, \n0x2068, push1, 0x20\n0x206a, add, \n0x206b, swap1, \n0x206c, dup2, \n0x206d, mstore, \n0x206e, push1, 0x20\n0x2070, add, \n0x2071, push1, 0x0\n0x2073, sha3, \n0x2074, push1, 0x0\n0x2076, dup6, \n0x2077, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x208c, and, \n0x208d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x20a2, and, \n0x20a3, dup2, \n0x20a4, mstore, \n0x20a5, push1, 0x20\n0x20a7, add, \n0x20a8, swap1, \n0x20a9, dup2, \n0x20aa, mstore, \n0x20ab, push1, 0x20\n0x20ad, add, \n0x20ae, push1, 0x0\n0x20b0, sha3, \n0x20b1, sload, \n0x20b2, eq, \n0x20b3, iszero, \n0x20b4, jumpdest, \n0x20b5, iszero, \n0x20b6, iszero, \n0x20b7, iszero, \n0x20b8, push2, 0x20c0\n0x20bb, jumpi, \n0x20bc, push1, 0x0\n0x20be, dup1, \n0x20bf, revert, \n0x20c0, jumpdest, \n0x20c1, dup2, \n0x20c2, push1, 0x5\n0x20c4, push1, 0x0\n0x20c6, caller, \n0x20c7, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x20dc, and, \n0x20dd, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x20f2, and, \n0x20f3, dup2, \n0x20f4, mstore, \n0x20f5, push1, 0x20\n0x20f7, add, \n0x20f8, swap1, \n0x20f9, dup2, \n0x20fa, mstore, \n0x20fb, push1, 0x20\n0x20fd, add, \n0x20fe, push1, 0x0\n0x2100, sha3, \n0x2101, push1, 0x0\n0x2103, dup6, \n0x2104, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2119, and, \n0x211a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x212f, and, \n0x2130, dup2, \n0x2131, mstore, \n0x2132, push1, 0x20\n0x2134, add, \n0x2135, swap1, \n0x2136, dup2, \n0x2137, mstore, \n0x2138, push1, 0x20\n0x213a, add, \n0x213b, push1, 0x0\n0x213d, sha3, \n0x213e, dup2, \n0x213f, swap1, \n0x2140, sstore, \n0x2141, pop, \n0x2142, dup3, \n0x2143, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2158, and, \n0x2159, caller, \n0x215a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x216f, and, \n0x2170, push32, 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n0x2191, dup5, \n0x2192, push1, 0x40\n0x2194, mload, \n0x2195, dup1, \n0x2196, dup3, \n0x2197, dup2, \n0x2198, mstore, \n0x2199, push1, 0x20\n0x219b, add, \n0x219c, swap2, \n0x219d, pop, \n0x219e, pop, \n0x219f, push1, 0x40\n0x21a1, mload, \n0x21a2, dup1, \n0x21a3, swap2, \n0x21a4, sub, \n0x21a5, swap1, \n0x21a6, log3, \n0x21a7, pop, \n0x21a8, pop, \n0x21a9, pop, \n0x21aa, jump, \n0x21ab, jumpdest, \n0x21ac, push1, 0x0\n0x21ae, dup1, \n0x21af, push1, 0x0\n0x21b1, push1, 0x60\n0x21b3, push1, 0x4\n0x21b5, dup2, \n0x21b6, add, \n0x21b7, push1, 0x0\n0x21b9, calldatasize, \n0x21ba, swap1, \n0x21bb, pop, \n0x21bc, lt, \n0x21bd, iszero, \n0x21be, iszero, \n0x21bf, iszero, \n0x21c0, push2, 0x21c8\n0x21c3, jumpi, \n0x21c4, push1, 0x0\n0x21c6, dup1, \n0x21c7, revert, \n0x21c8, jumpdest, \n0x21c9, push1, 0x5\n0x21cb, push1, 0x0\n0x21cd, dup9, \n0x21ce, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x21e3, and, \n0x21e4, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x21f9, and, \n0x21fa, dup2, \n0x21fb, mstore, \n0x21fc, push1, 0x20\n0x21fe, add, \n0x21ff, swap1, \n0x2200, dup2, \n0x2201, mstore, \n0x2202, push1, 0x20\n0x2204, add, \n0x2205, push1, 0x0\n0x2207, sha3, \n0x2208, push1, 0x0\n0x220a, caller, \n0x220b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2220, and, \n0x2221, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2236, and, \n0x2237, dup2, \n0x2238, mstore, \n0x2239, push1, 0x20\n0x223b, add, \n0x223c, swap1, \n0x223d, dup2, \n0x223e, mstore, \n0x223f, push1, 0x20\n0x2241, add, \n0x2242, push1, 0x0\n0x2244, sha3, \n0x2245, sload, \n0x2246, swap4, \n0x2247, pop, \n0x2248, push2, 0x2270\n0x224b, push2, 0x2710\n0x224e, push2, 0x2262\n0x2251, push1, 0x3\n0x2253, sload, \n0x2254, dup9, \n0x2255, push2, 0x2a03\n0x2258, swap1, \n0x2259, swap2, \n0x225a, swap1, \n0x225b, push4, 0xffffffff\n0x2260, and, \n0x2261, jump, \n0x2262, jumpdest, \n0x2263, push2, 0x2ac5\n0x2266, swap1, \n0x2267, swap2, \n0x2268, swap1, \n0x2269, push4, 0xffffffff\n0x226e, and, \n0x226f, jump, \n0x2270, jumpdest, \n0x2271, swap3, \n0x2272, pop, \n0x2273, push1, 0x4\n0x2275, sload, \n0x2276, dup4, \n0x2277, gt, \n0x2278, iszero, \n0x2279, push2, 0x2282\n0x227c, jumpi, \n0x227d, push1, 0x4\n0x227f, sload, \n0x2280, swap3, \n0x2281, pop, \n0x2282, jumpdest, \n0x2283, push32, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n0x22a4, dup5, \n0x22a5, lt, \n0x22a6, iszero, \n0x22a7, push2, 0x233e\n0x22aa, jumpi, \n0x22ab, push2, 0x22bd\n0x22ae, dup6, \n0x22af, dup6, \n0x22b0, push2, 0x2ae0\n0x22b3, swap1, \n0x22b4, swap2, \n0x22b5, swap1, \n0x22b6, push4, 0xffffffff\n0x22bb, and, \n0x22bc, jump, \n0x22bd, jumpdest, \n0x22be, push1, 0x5\n0x22c0, push1, 0x0\n0x22c2, dup10, \n0x22c3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x22d8, and, \n0x22d9, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x22ee, and, \n0x22ef, dup2, \n0x22f0, mstore, \n0x22f1, push1, 0x20\n0x22f3, add, \n0x22f4, swap1, \n0x22f5, dup2, \n0x22f6, mstore, \n0x22f7, push1, 0x20\n0x22f9, add, \n0x22fa, push1, 0x0\n0x22fc, sha3, \n0x22fd, push1, 0x0\n0x22ff, caller, \n0x2300, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2315, and, \n0x2316, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x232b, and, \n0x232c, dup2, \n0x232d, mstore, \n0x232e, push1, 0x20\n0x2330, add, \n0x2331, swap1, \n0x2332, dup2, \n0x2333, mstore, \n0x2334, push1, 0x20\n0x2336, add, \n0x2337, push1, 0x0\n0x2339, sha3, \n0x233a, dup2, \n0x233b, swap1, \n0x233c, sstore, \n0x233d, pop, \n0x233e, jumpdest, \n0x233f, push2, 0x2351\n0x2342, dup4, \n0x2343, dup7, \n0x2344, push2, 0x2ae0\n0x2347, swap1, \n0x2348, swap2, \n0x2349, swap1, \n0x234a, push4, 0xffffffff\n0x234f, and, \n0x2350, jump, \n0x2351, jumpdest, \n0x2352, swap2, \n0x2353, pop, \n0x2354, push2, 0x23a5\n0x2357, dup6, \n0x2358, push1, 0x2\n0x235a, push1, 0x0\n0x235c, dup11, \n0x235d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2372, and, \n0x2373, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2388, and, \n0x2389, dup2, \n0x238a, mstore, \n0x238b, push1, 0x20\n0x238d, add, \n0x238e, swap1, \n0x238f, dup2, \n0x2390, mstore, \n0x2391, push1, 0x20\n0x2393, add, \n0x2394, push1, 0x0\n0x2396, sha3, \n0x2397, sload, \n0x2398, push2, 0x2ae0\n0x239b, swap1, \n0x239c, swap2, \n0x239d, swap1, \n0x239e, push4, 0xffffffff\n0x23a3, and, \n0x23a4, jump, \n0x23a5, jumpdest, \n0x23a6, push1, 0x2\n0x23a8, push1, 0x0\n0x23aa, dup10, \n0x23ab, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x23c0, and, \n0x23c1, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x23d6, and, \n0x23d7, dup2, \n0x23d8, mstore, \n0x23d9, push1, 0x20\n0x23db, add, \n0x23dc, swap1, \n0x23dd, dup2, \n0x23de, mstore, \n0x23df, push1, 0x20\n0x23e1, add, \n0x23e2, push1, 0x0\n0x23e4, sha3, \n0x23e5, dup2, \n0x23e6, swap1, \n0x23e7, sstore, \n0x23e8, pop, \n0x23e9, push2, 0x243a\n0x23ec, dup3, \n0x23ed, push1, 0x2\n0x23ef, push1, 0x0\n0x23f1, dup10, \n0x23f2, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2407, and, \n0x2408, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x241d, and, \n0x241e, dup2, \n0x241f, mstore, \n0x2420, push1, 0x20\n0x2422, add, \n0x2423, swap1, \n0x2424, dup2, \n0x2425, mstore, \n0x2426, push1, 0x20\n0x2428, add, \n0x2429, push1, 0x0\n0x242b, sha3, \n0x242c, sload, \n0x242d, push2, 0x2af9\n0x2430, swap1, \n0x2431, swap2, \n0x2432, swap1, \n0x2433, push4, 0xffffffff\n0x2438, and, \n0x2439, jump, \n0x243a, jumpdest, \n0x243b, push1, 0x2\n0x243d, push1, 0x0\n0x243f, dup9, \n0x2440, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2455, and, \n0x2456, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x246b, and, \n0x246c, dup2, \n0x246d, mstore, \n0x246e, push1, 0x20\n0x2470, add, \n0x2471, swap1, \n0x2472, dup2, \n0x2473, mstore, \n0x2474, push1, 0x20\n0x2476, add, \n0x2477, push1, 0x0\n0x2479, sha3, \n0x247a, dup2, \n0x247b, swap1, \n0x247c, sstore, \n0x247d, pop, \n0x247e, push1, 0x0\n0x2480, dup4, \n0x2481, gt, \n0x2482, iszero, \n0x2483, push2, 0x25e4\n0x2486, jumpi, \n0x2487, push2, 0x24f9\n0x248a, dup4, \n0x248b, push1, 0x2\n0x248d, push1, 0x0\n0x248f, dup1, \n0x2490, push1, 0x0\n0x2492, swap1, \n0x2493, sload, \n0x2494, swap1, \n0x2495, push2, 0x100\n0x2498, exp, \n0x2499, swap1, \n0x249a, div, \n0x249b, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x24b0, and, \n0x24b1, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x24c6, and, \n0x24c7, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x24dc, and, \n0x24dd, dup2, \n0x24de, mstore, \n0x24df, push1, 0x20\n0x24e1, add, \n0x24e2, swap1, \n0x24e3, dup2, \n0x24e4, mstore, \n0x24e5, push1, 0x20\n0x24e7, add, \n0x24e8, push1, 0x0\n0x24ea, sha3, \n0x24eb, sload, \n0x24ec, push2, 0x2af9\n0x24ef, swap1, \n0x24f0, swap2, \n0x24f1, swap1, \n0x24f2, push4, 0xffffffff\n0x24f7, and, \n0x24f8, jump, \n0x24f9, jumpdest, \n0x24fa, push1, 0x2\n0x24fc, push1, 0x0\n0x24fe, dup1, \n0x24ff, push1, 0x0\n0x2501, swap1, \n0x2502, sload, \n0x2503, swap1, \n0x2504, push2, 0x100\n0x2507, exp, \n0x2508, swap1, \n0x2509, div, \n0x250a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x251f, and, \n0x2520, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2535, and, \n0x2536, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x254b, and, \n0x254c, dup2, \n0x254d, mstore, \n0x254e, push1, 0x20\n0x2550, add, \n0x2551, swap1, \n0x2552, dup2, \n0x2553, mstore, \n0x2554, push1, 0x20\n0x2556, add, \n0x2557, push1, 0x0\n0x2559, sha3, \n0x255a, dup2, \n0x255b, swap1, \n0x255c, sstore, \n0x255d, pop, \n0x255e, push1, 0x0\n0x2560, dup1, \n0x2561, swap1, \n0x2562, sload, \n0x2563, swap1, \n0x2564, push2, 0x100\n0x2567, exp, \n0x2568, swap1, \n0x2569, div, \n0x256a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x257f, and, \n0x2580, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2595, and, \n0x2596, dup8, \n0x2597, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x25ac, and, \n0x25ad, push32, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n0x25ce, dup6, \n0x25cf, push1, 0x40\n0x25d1, mload, \n0x25d2, dup1, \n0x25d3, dup3, \n0x25d4, dup2, \n0x25d5, mstore, \n0x25d6, push1, 0x20\n0x25d8, add, \n0x25d9, swap2, \n0x25da, pop, \n0x25db, pop, \n0x25dc, push1, 0x40\n0x25de, mload, \n0x25df, dup1, \n0x25e0, swap2, \n0x25e1, sub, \n0x25e2, swap1, \n0x25e3, log3, \n0x25e4, jumpdest, \n0x25e5, dup6, \n0x25e6, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x25fb, and, \n0x25fc, dup8, \n0x25fd, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2612, and, \n0x2613, push32, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n0x2634, dup5, \n0x2635, push1, 0x40\n0x2637, mload, \n0x2638, dup1, \n0x2639, dup3, \n0x263a, dup2, \n0x263b, mstore, \n0x263c, push1, 0x20\n0x263e, add, \n0x263f, swap2, \n0x2640, pop, \n0x2641, pop, \n0x2642, push1, 0x40\n0x2644, mload, \n0x2645, dup1, \n0x2646, swap2, \n0x2647, sub, \n0x2648, swap1, \n0x2649, log3, \n0x264a, pop, \n0x264b, pop, \n0x264c, pop, \n0x264d, pop, \n0x264e, pop, \n0x264f, pop, \n0x2650, pop, \n0x2651, jump, \n0x2652, jumpdest, \n0x2653, push1, 0x0\n0x2655, push1, 0x2\n0x2657, push1, 0x0\n0x2659, dup4, \n0x265a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x266f, and, \n0x2670, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2685, and, \n0x2686, dup2, \n0x2687, mstore, \n0x2688, push1, 0x20\n0x268a, add, \n0x268b, swap1, \n0x268c, dup2, \n0x268d, mstore, \n0x268e, push1, 0x20\n0x2690, add, \n0x2691, push1, 0x0\n0x2693, sha3, \n0x2694, sload, \n0x2695, swap1, \n0x2696, pop, \n0x2697, swap2, \n0x2698, swap1, \n0x2699, pop, \n0x269a, jump, \n0x269b, jumpdest, \n0x269c, push1, 0x0\n0x269e, dup1, \n0x269f, push1, 0x40\n0x26a1, push1, 0x4\n0x26a3, dup2, \n0x26a4, add, \n0x26a5, push1, 0x0\n0x26a7, calldatasize, \n0x26a8, swap1, \n0x26a9, pop, \n0x26aa, lt, \n0x26ab, iszero, \n0x26ac, iszero, \n0x26ad, iszero, \n0x26ae, push2, 0x26b6\n0x26b1, jumpi, \n0x26b2, push1, 0x0\n0x26b4, dup1, \n0x26b5, revert, \n0x26b6, jumpdest, \n0x26b7, push2, 0x26df\n0x26ba, push2, 0x2710\n0x26bd, push2, 0x26d1\n0x26c0, push1, 0x3\n0x26c2, sload, \n0x26c3, dup8, \n0x26c4, push2, 0x2a03\n0x26c7, swap1, \n0x26c8, swap2, \n0x26c9, swap1, \n0x26ca, push4, 0xffffffff\n0x26cf, and, \n0x26d0, jump, \n0x26d1, jumpdest, \n0x26d2, push2, 0x2ac5\n0x26d5, swap1, \n0x26d6, swap2, \n0x26d7, swap1, \n0x26d8, push4, 0xffffffff\n0x26dd, and, \n0x26de, jump, \n0x26df, jumpdest, \n0x26e0, swap3, \n0x26e1, pop, \n0x26e2, push1, 0x4\n0x26e4, sload, \n0x26e5, dup4, \n0x26e6, gt, \n0x26e7, iszero, \n0x26e8, push2, 0x26f1\n0x26eb, jumpi, \n0x26ec, push1, 0x4\n0x26ee, sload, \n0x26ef, swap3, \n0x26f0, pop, \n0x26f1, jumpdest, \n0x26f2, push2, 0x2704\n0x26f5, dup4, \n0x26f6, dup6, \n0x26f7, push2, 0x2ae0\n0x26fa, swap1, \n0x26fb, swap2, \n0x26fc, swap1, \n0x26fd, push4, 0xffffffff\n0x2702, and, \n0x2703, jump, \n0x2704, jumpdest, \n0x2705, swap2, \n0x2706, pop, \n0x2707, push2, 0x2758\n0x270a, dup5, \n0x270b, push1, 0x2\n0x270d, push1, 0x0\n0x270f, caller, \n0x2710, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2725, and, \n0x2726, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x273b, and, \n0x273c, dup2, \n0x273d, mstore, \n0x273e, push1, 0x20\n0x2740, add, \n0x2741, swap1, \n0x2742, dup2, \n0x2743, mstore, \n0x2744, push1, 0x20\n0x2746, add, \n0x2747, push1, 0x0\n0x2749, sha3, \n0x274a, sload, \n0x274b, push2, 0x2ae0\n0x274e, swap1, \n0x274f, swap2, \n0x2750, swap1, \n0x2751, push4, 0xffffffff\n0x2756, and, \n0x2757, jump, \n0x2758, jumpdest, \n0x2759, push1, 0x2\n0x275b, push1, 0x0\n0x275d, caller, \n0x275e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2773, and, \n0x2774, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2789, and, \n0x278a, dup2, \n0x278b, mstore, \n0x278c, push1, 0x20\n0x278e, add, \n0x278f, swap1, \n0x2790, dup2, \n0x2791, mstore, \n0x2792, push1, 0x20\n0x2794, add, \n0x2795, push1, 0x0\n0x2797, sha3, \n0x2798, dup2, \n0x2799, swap1, \n0x279a, sstore, \n0x279b, pop, \n0x279c, push2, 0x27ed\n0x279f, dup3, \n0x27a0, push1, 0x2\n0x27a2, push1, 0x0\n0x27a4, dup9, \n0x27a5, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x27ba, and, \n0x27bb, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x27d0, and, \n0x27d1, dup2, \n0x27d2, mstore, \n0x27d3, push1, 0x20\n0x27d5, add, \n0x27d6, swap1, \n0x27d7, dup2, \n0x27d8, mstore, \n0x27d9, push1, 0x20\n0x27db, add, \n0x27dc, push1, 0x0\n0x27de, sha3, \n0x27df, sload, \n0x27e0, push2, 0x2af9\n0x27e3, swap1, \n0x27e4, swap2, \n0x27e5, swap1, \n0x27e6, push4, 0xffffffff\n0x27eb, and, \n0x27ec, jump, \n0x27ed, jumpdest, \n0x27ee, push1, 0x2\n0x27f0, push1, 0x0\n0x27f2, dup8, \n0x27f3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2808, and, \n0x2809, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x281e, and, \n0x281f, dup2, \n0x2820, mstore, \n0x2821, push1, 0x20\n0x2823, add, \n0x2824, swap1, \n0x2825, dup2, \n0x2826, mstore, \n0x2827, push1, 0x20\n0x2829, add, \n0x282a, push1, 0x0\n0x282c, sha3, \n0x282d, dup2, \n0x282e, swap1, \n0x282f, sstore, \n0x2830, pop, \n0x2831, push1, 0x0\n0x2833, dup4, \n0x2834, gt, \n0x2835, iszero, \n0x2836, push2, 0x2997\n0x2839, jumpi, \n0x283a, push2, 0x28ac\n0x283d, dup4, \n0x283e, push1, 0x2\n0x2840, push1, 0x0\n0x2842, dup1, \n0x2843, push1, 0x0\n0x2845, swap1, \n0x2846, sload, \n0x2847, swap1, \n0x2848, push2, 0x100\n0x284b, exp, \n0x284c, swap1, \n0x284d, div, \n0x284e, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2863, and, \n0x2864, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2879, and, \n0x287a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x288f, and, \n0x2890, dup2, \n0x2891, mstore, \n0x2892, push1, 0x20\n0x2894, add, \n0x2895, swap1, \n0x2896, dup2, \n0x2897, mstore, \n0x2898, push1, 0x20\n0x289a, add, \n0x289b, push1, 0x0\n0x289d, sha3, \n0x289e, sload, \n0x289f, push2, 0x2af9\n0x28a2, swap1, \n0x28a3, swap2, \n0x28a4, swap1, \n0x28a5, push4, 0xffffffff\n0x28aa, and, \n0x28ab, jump, \n0x28ac, jumpdest, \n0x28ad, push1, 0x2\n0x28af, push1, 0x0\n0x28b1, dup1, \n0x28b2, push1, 0x0\n0x28b4, swap1, \n0x28b5, sload, \n0x28b6, swap1, \n0x28b7, push2, 0x100\n0x28ba, exp, \n0x28bb, swap1, \n0x28bc, div, \n0x28bd, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x28d2, and, \n0x28d3, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x28e8, and, \n0x28e9, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x28fe, and, \n0x28ff, dup2, \n0x2900, mstore, \n0x2901, push1, 0x20\n0x2903, add, \n0x2904, swap1, \n0x2905, dup2, \n0x2906, mstore, \n0x2907, push1, 0x20\n0x2909, add, \n0x290a, push1, 0x0\n0x290c, sha3, \n0x290d, dup2, \n0x290e, swap1, \n0x290f, sstore, \n0x2910, pop, \n0x2911, push1, 0x0\n0x2913, dup1, \n0x2914, swap1, \n0x2915, sload, \n0x2916, swap1, \n0x2917, push2, 0x100\n0x291a, exp, \n0x291b, swap1, \n0x291c, div, \n0x291d, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2932, and, \n0x2933, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2948, and, \n0x2949, caller, \n0x294a, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x295f, and, \n0x2960, push32, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n0x2981, dup6, \n0x2982, push1, 0x40\n0x2984, mload, \n0x2985, dup1, \n0x2986, dup3, \n0x2987, dup2, \n0x2988, mstore, \n0x2989, push1, 0x20\n0x298b, add, \n0x298c, swap2, \n0x298d, pop, \n0x298e, pop, \n0x298f, push1, 0x40\n0x2991, mload, \n0x2992, dup1, \n0x2993, swap2, \n0x2994, sub, \n0x2995, swap1, \n0x2996, log3, \n0x2997, jumpdest, \n0x2998, dup5, \n0x2999, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x29ae, and, \n0x29af, caller, \n0x29b0, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x29c5, and, \n0x29c6, push32, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n0x29e7, dup5, \n0x29e8, push1, 0x40\n0x29ea, mload, \n0x29eb, dup1, \n0x29ec, dup3, \n0x29ed, dup2, \n0x29ee, mstore, \n0x29ef, push1, 0x20\n0x29f1, add, \n0x29f2, swap2, \n0x29f3, pop, \n0x29f4, pop, \n0x29f5, push1, 0x40\n0x29f7, mload, \n0x29f8, dup1, \n0x29f9, swap2, \n0x29fa, sub, \n0x29fb, swap1, \n0x29fc, log3, \n0x29fd, pop, \n0x29fe, pop, \n0x29ff, pop, \n0x2a00, pop, \n0x2a01, pop, \n0x2a02, jump, \n0x2a03, jumpdest, \n0x2a04, push1, 0x0\n0x2a06, dup1, \n0x2a07, push1, 0x0\n0x2a09, dup5, \n0x2a0a, eq, \n0x2a0b, iszero, \n0x2a0c, push2, 0x2a18\n0x2a0f, jumpi, \n0x2a10, push1, 0x0\n0x2a12, swap2, \n0x2a13, pop, \n0x2a14, push2, 0x2a37\n0x2a17, jump, \n0x2a18, jumpdest, \n0x2a19, dup3, \n0x2a1a, dup5, \n0x2a1b, mul, \n0x2a1c, swap1, \n0x2a1d, pop, \n0x2a1e, dup3, \n0x2a1f, dup5, \n0x2a20, dup3, \n0x2a21, dup2, \n0x2a22, iszero, \n0x2a23, iszero, \n0x2a24, push2, 0x2a29\n0x2a27, jumpi, \n0x2a28, invalid, \n0x2a29, jumpdest, \n0x2a2a, div, \n0x2a2b, eq, \n0x2a2c, iszero, \n0x2a2d, iszero, \n0x2a2e, push2, 0x2a33\n0x2a31, jumpi, \n0x2a32, invalid, \n0x2a33, jumpdest, \n0x2a34, dup1, \n0x2a35, swap2, \n0x2a36, pop, \n0x2a37, jumpdest, \n0x2a38, pop, \n0x2a39, swap3, \n0x2a3a, swap2, \n0x2a3b, pop, \n0x2a3c, pop, \n0x2a3d, jump, \n0x2a3e, jumpdest, \n0x2a3f, push1, 0x0\n0x2a41, push1, 0x5\n0x2a43, push1, 0x0\n0x2a45, dup5, \n0x2a46, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2a5b, and, \n0x2a5c, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2a71, and, \n0x2a72, dup2, \n0x2a73, mstore, \n0x2a74, push1, 0x20\n0x2a76, add, \n0x2a77, swap1, \n0x2a78, dup2, \n0x2a79, mstore, \n0x2a7a, push1, 0x20\n0x2a7c, add, \n0x2a7d, push1, 0x0\n0x2a7f, sha3, \n0x2a80, push1, 0x0\n0x2a82, dup4, \n0x2a83, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2a98, and, \n0x2a99, push20, 0xffffffffffffffffffffffffffffffffffffffff\n0x2aae, and, \n0x2aaf, dup2, \n0x2ab0, mstore, \n0x2ab1, push1, 0x20\n0x2ab3, add, \n0x2ab4, swap1, \n0x2ab5, dup2, \n0x2ab6, mstore, \n0x2ab7, push1, 0x20\n0x2ab9, add, \n0x2aba, push1, 0x0\n0x2abc, sha3, \n0x2abd, sload, \n0x2abe, swap1, \n0x2abf, pop, \n0x2ac0, swap3, \n0x2ac1, swap2, \n0x2ac2, pop, \n0x2ac3, pop, \n0x2ac4, jump, \n0x2ac5, jumpdest, \n0x2ac6, push1, 0x0\n0x2ac8, dup1, \n0x2ac9, dup3, \n0x2aca, dup5, \n0x2acb, dup2, \n0x2acc, iszero, \n0x2acd, iszero, \n0x2ace, push2, 0x2ad3\n0x2ad1, jumpi, \n0x2ad2, invalid, \n0x2ad3, jumpdest, \n0x2ad4, div, \n0x2ad5, swap1, \n0x2ad6, pop, \n0x2ad7, dup1, \n0x2ad8, swap2, \n0x2ad9, pop, \n0x2ada, pop, \n0x2adb, swap3, \n0x2adc, swap2, \n0x2add, pop, \n0x2ade, pop, \n0x2adf, jump, \n0x2ae0, jumpdest, \n0x2ae1, push1, 0x0\n0x2ae3, dup3, \n0x2ae4, dup3, \n0x2ae5, gt, \n0x2ae6, iszero, \n0x2ae7, iszero, \n0x2ae8, iszero, \n0x2ae9, push2, 0x2aee\n0x2aec, jumpi, \n0x2aed, invalid, \n0x2aee, jumpdest, \n0x2aef, dup2, \n0x2af0, dup4, \n0x2af1, sub, \n0x2af2, swap1, \n0x2af3, pop, \n0x2af4, swap3, \n0x2af5, swap2, \n0x2af6, pop, \n0x2af7, pop, \n0x2af8, jump, \n0x2af9, jumpdest, \n0x2afa, push1, 0x0\n0x2afc, dup1, \n0x2afd, dup3, \n0x2afe, dup5, \n0x2aff, add, \n0x2b00, swap1, \n0x2b01, pop, \n0x2b02, dup4, \n0x2b03, dup2, \n0x2b04, lt, \n0x2b05, iszero, \n0x2b06, iszero, \n0x2b07, iszero, \n0x2b08, push2, 0x2b0d\n0x2b0b, jumpi, \n0x2b0c, invalid, \n0x2b0d, jumpdest, \n0x2b0e, dup1, \n0x2b0f, swap2, \n0x2b10, pop, \n0x2b11, pop, \n0x2b12, swap3, \n0x2b13, swap2, \n0x2b14, pop, \n0x2b15, pop, \n0x2b16, jump, \n0x2b17, stop, \n0x2b18, log1, \n0x2b19, push6, 0x627a7a723058\n0x2b20, sha3, \n0x2b21, push5, 0x5ee12d73db\n0x2b27, selfbalance, \n0x2b28, revert, \n0x2b29, push25, 0xba77fa1f824c3c8f9184061b3b10386beb4dc9236abb280029","pseudocode":"\u001b[38;5;8m# Palkeoramix decompiler. \u001b[0m\n\n\u001b[95mconst \u001b[0mMAX_UINT = \u001b[1m-1\u001b[0m\n\n\u001b[32mdef \u001b[0mstorage:\n  \u001b[32mpaused\u001b[0m is uint8 \u001b[38;5;8mat storage 0\u001b[0m\u001b[38;5;8m offset 160\u001b[0m\n  \u001b[32mstor0\u001b[0m is uint128 \u001b[38;5;8mat storage 0\u001b[0m\u001b[38;5;8m offset 160\u001b[0m\n  \u001b[32mowner\u001b[0m is addr \u001b[38;5;8mat storage 0\u001b[0m\u001b[38;5;8m\u001b[0m\n  \u001b[32m_totalSupply\u001b[0m is uint256 \u001b[38;5;8mat storage 1\u001b[0m\u001b[38;5;8m\u001b[0m\n  \u001b[32mbalances\u001b[0m is mapping of uint256 \u001b[38;5;8mat storage 2\u001b[0m\n  \u001b[32mbasisPointsRate\u001b[0m is uint256 \u001b[38;5;8mat storage 3\u001b[0m\u001b[38;5;8m\u001b[0m\n  \u001b[32mmaximumFee\u001b[0m is uint256 \u001b[38;5;8mat storage 4\u001b[0m\u001b[38;5;8m\u001b[0m\n  \u001b[32mallowed\u001b[0m is mapping of uint256 \u001b[38;5;8mat storage 5\u001b[0m\n  \u001b[32mstor6\u001b[0m is mapping of uint8 \u001b[38;5;8mat storage 6\u001b[0m\n  \u001b[32mname\u001b[0m is array of uint256 \u001b[38;5;8mat storage 7\u001b[0m\n  \u001b[32msymbol\u001b[0m is array of uint256 \u001b[38;5;8mat storage 8\u001b[0m\n  \u001b[32mdecimals\u001b[0m is uint256 \u001b[38;5;8mat storage 9\u001b[0m\u001b[38;5;8m\u001b[0m\n  \u001b[32mdeprecated\u001b[0m is uint8 \u001b[38;5;8mat storage 10\u001b[0m\u001b[38;5;8m offset 160\u001b[0m\n  \u001b[32mstor10\u001b[0m is uint128 \u001b[38;5;8mat storage 10\u001b[0m\u001b[38;5;8m offset 160\u001b[0m\n  \u001b[32mupgradedAddress\u001b[0m is addr \u001b[38;5;8mat storage 10\u001b[0m\u001b[38;5;8m\u001b[0m\n\n\u001b[95mdef \u001b[0mname(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mname\u001b[0m\u001b[32m[\u001b[0m0 \u001b[95mlen\u001b[0m \u001b[32mname\u001b[0m\u001b[32m.length\u001b[0m\u001b[32m]\u001b[0m\n\n\u001b[95mdef \u001b[0mdeprecated(): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mdeprecated\u001b[0m)\n\n\u001b[95mdef \u001b[0mupgradedAddress(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mupgradedAddress\u001b[0m\n\n\u001b[95mdef \u001b[0mbalances(address \u001b[32m_param1\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param1\u001b[0m\u001b[32m]\u001b[0m\n\n\u001b[95mdef \u001b[0mdecimals(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mdecimals\u001b[0m\n\n\u001b[95mdef \u001b[0mmaximumFee(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mmaximumFee\u001b[0m\n\n\u001b[95mdef \u001b[0m_totalSupply(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32m_totalSupply\u001b[0m\n\n\u001b[95mdef \u001b[0mgetBlackListStatus(address \u001b[32m_addr\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_addr\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m)\n\n\u001b[95mdef \u001b[0mallowed(address \u001b[32m_param1\u001b[0m, address \u001b[32m_param2\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param1\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param2\u001b[0m\u001b[32m]\u001b[0m\n\n\u001b[95mdef \u001b[0mpaused(): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mpaused\u001b[0m)\n\n\u001b[95mdef \u001b[0mgetOwner(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mowner\u001b[0m\n\n\u001b[95mdef \u001b[0mowner(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mowner\u001b[0m\n\n\u001b[95mdef \u001b[0msymbol(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32msymbol\u001b[0m\u001b[32m[\u001b[0m0 \u001b[95mlen\u001b[0m \u001b[32msymbol\u001b[0m\u001b[32m.length\u001b[0m\u001b[32m]\u001b[0m\n\n\u001b[95mdef \u001b[0mbasisPointsRate(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mbasisPointsRate\u001b[0m\n\n\u001b[95mdef \u001b[0misBlackListed(address \u001b[32m_param1\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param1\u001b[0m\u001b[32m]\u001b[0m)\n\n\u001b[38;5;8m#\n#  Regular functions\n#\u001b[0m\n\n\u001b[95mdef \u001b[0m_fallback()\u001b[95m payable\u001b[0m: \u001b[38;5;8m# default function\u001b[0m\n  revert\n\n\u001b[95mdef \u001b[0mtransferOwnership(address \u001b[32m_newOwner\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  if \u001b[32m_newOwner\u001b[0m:\n      \u001b[32mowner\u001b[0m = \u001b[32m_newOwner\u001b[0m\n\n\u001b[95mdef \u001b[0munpause(): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32mpaused\u001b[0m\n  Mask(96, 0, \u001b[32mstor0\u001b[0m\u001b[32m.field_160\u001b[0m) = 0\n  \u001b[38;5;8mlog Unpause()\u001b[0m\n\n\u001b[95mdef \u001b[0mpause(): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require not \u001b[32mpaused\u001b[0m\n  Mask(96, 0, \u001b[32mstor0\u001b[0m\u001b[32m.field_160\u001b[0m) = 1\n  \u001b[38;5;8mlog Pause()\u001b[0m\n\n\u001b[95mdef \u001b[0mdeprecate(address \u001b[32m_upgradedAddress\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  \u001b[32mstor10\u001b[0m = 1\n  \u001b[32mupgradedAddress\u001b[0m = \u001b[32m_upgradedAddress\u001b[0m\n  \u001b[38;5;8mlog Deprecate(address newAddress=_upgradedAddress)\u001b[0m\n\n\u001b[95mdef \u001b[0maddBlackList(address \u001b[32m_evilUser\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_evilUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 1\n  \u001b[38;5;8mlog AddedBlackList(address user=_evilUser)\u001b[0m\n\n\u001b[95mdef \u001b[0mremoveBlackList(address \u001b[32m_clearedUser\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_clearedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 0\n  \u001b[38;5;8mlog RemovedBlackList(address user=_clearedUser)\u001b[0m\n\n\u001b[95mdef \u001b[0mtotalSupply(): \u001b[38;5;8m# not payable\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      return \u001b[32m_totalSupply\u001b[0m\n  require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n  call \u001b[32mupgradedAddress\u001b[0m.totalSupply() with:\n       gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n  require ext_call.success\n  return ext_call.return_data[0]\n\n\u001b[95mdef \u001b[0mbalanceOf(address \u001b[32m_owner\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      return \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_owner\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n  call \u001b[32mupgradedAddress\u001b[0m.balanceOf(\u001b[38;5;8maddress\u001b[0m tokenOwner) with:\n       gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n      args \u001b[32m_owner\u001b[0m\n  require ext_call.success\n  return ext_call.return_data[0]\n\n\u001b[95mdef \u001b[0mredeem(uint256 \u001b[32m_tokens\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32m_totalSupply\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32m_tokens\u001b[0m\n  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32m_tokens\u001b[0m\n  \u001b[32m_totalSupply\u001b[0m -= \u001b[32m_tokens\u001b[0m\n  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_tokens\u001b[0m\n  \u001b[38;5;8mlog Redeem(uint256 amount=_tokens)\u001b[0m\n\n\u001b[95mdef \u001b[0mallowance(address \u001b[32m_owner\u001b[0m, address \u001b[32m_spender\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      return \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_owner\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n  call \u001b[32mupgradedAddress\u001b[0m.allowance(\u001b[38;5;8maddress\u001b[0m tokenOwner, \u001b[38;5;8maddress\u001b[0m spender) with:\n       gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n      args \u001b[38;5;8maddr(\u001b[0m\u001b[32m_owner\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_spender\u001b[0m\n  require ext_call.success\n  return ext_call.return_data[0]\n\n\u001b[95mdef \u001b[0missue(uint256 \u001b[32m_amount\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32m_totalSupply\u001b[0m + \u001b[32m_amount\u001b[0m\u001b[1m \u003e \u001b[0m\u001b[32m_totalSupply\u001b[0m\n  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_amount\u001b[0m\u001b[1m \u003e \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_amount\u001b[0m\n  \u001b[32m_totalSupply\u001b[0m += \u001b[32m_amount\u001b[0m\n  \u001b[38;5;8mlog Issue(uint256 amount=_amount)\u001b[0m\n\n\u001b[95mdef \u001b[0msetParams(uint256 \u001b[32m_newBasisPoints\u001b[0m, uint256 \u001b[32m_newMaxFee\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32m_newBasisPoints\u001b[0m\u001b[1m \u003c \u001b[0m20\n  require \u001b[32m_newMaxFee\u001b[0m\u001b[1m \u003c \u001b[0m50\n  \u001b[32mbasisPointsRate\u001b[0m = \u001b[32m_newBasisPoints\u001b[0m\n  if not \u001b[32m_newMaxFee\u001b[0m:\n      \u001b[32mmaximumFee\u001b[0m = 0\n  else:\n      require \u001b[32m_newMaxFee\u001b[0m\n      require \u001b[32m_newMaxFee\u001b[0m\u001b[1m * \u001b[0m10^\u001b[32mdecimals\u001b[0m\u001b[1m / \u001b[0m\u001b[32m_newMaxFee\u001b[0m\u001b[1m == \u001b[0m10^\u001b[32mdecimals\u001b[0m\n      \u001b[32mmaximumFee\u001b[0m = \u001b[32m_newMaxFee\u001b[0m\u001b[1m * \u001b[0m10^\u001b[32mdecimals\u001b[0m\n  \u001b[38;5;8mlog Params(\u001b[0m\n  \u001b[38;5;8m      uint256 feeBasisPoints=basisPointsRate,\u001b[0m\n  \u001b[38;5;8m      uint256 maxFee=maximumFee)\u001b[0m\n\n\u001b[95mdef \u001b[0mapprove(address \u001b[32m_spender\u001b[0m, uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require calldata.size\u001b[1m \u003e= \u001b[0m68\n  if \u001b[32mdeprecated\u001b[0m:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.approveByLegacy(\u001b[38;5;8maddress\u001b[0m param1, \u001b[38;5;8maddress\u001b[0m param2, \u001b[38;5;8muint256\u001b[0m param3) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args caller, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_value\u001b[0m\n      require ext_call.success\n  else:\n      require calldata.size\u001b[1m \u003e= \u001b[0m68\n      if \u001b[32m_value\u001b[0m:\n          require not \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n      \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32m_value\u001b[0m\n      \u001b[38;5;8mlog Approval(\u001b[0m\n      \u001b[38;5;8m      address tokenOwner=_value,\u001b[0m\n      \u001b[38;5;8m      address spender=caller,\u001b[0m\n      \u001b[38;5;8m      uint256 tokens=_spender)\u001b[0m\n\n\u001b[95mdef \u001b[0mdestroyBlackFunds(address \u001b[32m_blackListedUser\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 0\n      \u001b[32m_totalSupply\u001b[0m -= \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n      \u001b[38;5;8mlog DestroyedBlackFunds(\u001b[0m\n      \u001b[38;5;8m      address blackListedUser=addr(_blackListedUser),\u001b[0m\n      \u001b[38;5;8m      uint256 balance=balances[addr(_blackListedUser)])\u001b[0m\n  else:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.balanceOf(\u001b[38;5;8maddress\u001b[0m tokenOwner) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args \u001b[32m_blackListedUser\u001b[0m\n      require ext_call.success\n      \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 0\n      \u001b[32m_totalSupply\u001b[0m -= ext_call.return_data[0]\n      \u001b[38;5;8mlog DestroyedBlackFunds(\u001b[0m\n      \u001b[38;5;8m      address blackListedUser=addr(_blackListedUser),\u001b[0m\n      \u001b[38;5;8m      uint256 balance=ext_call.return_data[0])\u001b[0m\n\n\u001b[95mdef \u001b[0mtransfer(address \u001b[32m_to\u001b[0m, uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require not \u001b[32mpaused\u001b[0m\n  require not \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n  if \u001b[32mdeprecated\u001b[0m:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.transferByLegacy(\u001b[38;5;8maddress\u001b[0m param1, \u001b[38;5;8maddress\u001b[0m param2, \u001b[38;5;8muint256\u001b[0m param3) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args caller, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_value\u001b[0m\n      require ext_call.success\n  else:\n      require calldata.size\u001b[1m \u003e= \u001b[0m68\n      if not \u001b[32m_value\u001b[0m:\n          if 0\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require 0\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=_value,\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=caller,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n      else:\n          require \u001b[32m_value\u001b[0m\n          require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m\u001b[32m_value\u001b[0m\u001b[1m == \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\n          if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\n              if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=(_value * basisPointsRate / 10000),\u001b[0m\n                  \u001b[38;5;8m      address to=caller,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - (_value * basisPointsRate / 10000)),\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=caller,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n\n\u001b[95mdef \u001b[0mtransferFrom(address \u001b[32m_from\u001b[0m, address \u001b[32m_to\u001b[0m, uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require not \u001b[32mpaused\u001b[0m\n  require not \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  if \u001b[32mdeprecated\u001b[0m:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.transferFromByLegacy(\u001b[38;5;8maddress\u001b[0m param1, \u001b[38;5;8maddress\u001b[0m param2, \u001b[38;5;8maddress\u001b[0m param3, \u001b[38;5;8muint256\u001b[0m param4) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args 0, \u001b[38;5;8muint32(\u001b[0mcaller\u001b[38;5;8m)\u001b[0m, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_value\u001b[0m\n      require ext_call.success\n  else:\n      require calldata.size\u001b[1m \u003e= \u001b[0m100\n      if not \u001b[32m_value\u001b[0m:\n          if \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[1m \u003c \u001b[0m-1:\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n          if 0\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require 0\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=_value,\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=_from,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n      else:\n          require \u001b[32m_value\u001b[0m\n          require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m\u001b[32m_value\u001b[0m\u001b[1m == \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\n          if \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[1m \u003c \u001b[0m-1:\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n          if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\n              if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=(_value * basisPointsRate / 10000),\u001b[0m\n                  \u001b[38;5;8m      address to=_from,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - (_value * basisPointsRate / 10000)),\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=_from,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n\n","functions":[{"abi_name":"name()","color_name":"name()","const":null,"getter":["storage",256,0,["array",["range",0,["storage",256,0,["length",["loc",7]]]],["loc",7]]],"hash":"0x06fdde03","length":[2,134],"name":"name()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mname(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mname\u001b[0m\u001b[32m[\u001b[0m0 \u001b[95mlen\u001b[0m \u001b[32mname\u001b[0m\u001b[32m.length\u001b[0m\u001b[32m]\u001b[0m","trace":[["return",["stor",256,0,["array",["range",0,["stor",256,0,["length",["name","name",7]]]],["name","name",7]]]]]},{"abi_name":"deprecate(address)","color_name":"deprecate(address \u001b[32m_upgradedAddress\u001b[0m)","const":null,"getter":null,"hash":"0x0753c30c","length":[5,271],"name":"deprecate(address _upgradedAddress)","params":{"4":["address","_upgradedAddress"]},"payable":false,"print":"\u001b[95mdef \u001b[0mdeprecate(address \u001b[32m_upgradedAddress\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  \u001b[32mstor10\u001b[0m = 1\n  \u001b[32mupgradedAddress\u001b[0m = \u001b[32m_upgradedAddress\u001b[0m\n  \u001b[38;5;8mlog Deprecate(address newAddress=_upgradedAddress)\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["store",96,160,["loc",10],1],["store",160,0,["name","upgradedAddress",10],["param","_upgradedAddress"]],["log",["param","_upgradedAddress"],9.23663929778208e+76],["stop"]]]]},{"abi_name":"approve(address,uint256)","color_name":"approve(address \u001b[32m_spender\u001b[0m, uint256 \u001b[32m_value\u001b[0m)","const":null,"getter":null,"hash":"0x095ea7b3","length":[17,1066],"name":"approve(address _spender, uint256 _value)","params":{"36":["uint256","_value"],"4":["address","_spender"]},"payable":false,"print":"\u001b[95mdef \u001b[0mapprove(address \u001b[32m_spender\u001b[0m, uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require calldata.size\u001b[1m \u003e= \u001b[0m68\n  if \u001b[32mdeprecated\u001b[0m:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.approveByLegacy(\u001b[38;5;8maddress\u001b[0m param1, \u001b[38;5;8maddress\u001b[0m param2, \u001b[38;5;8muint256\u001b[0m param3) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args caller, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_value\u001b[0m\n      require ext_call.success\n  else:\n      require calldata.size\u001b[1m \u003e= \u001b[0m68\n      if \u001b[32m_value\u001b[0m:\n          require not \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n      \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32m_value\u001b[0m\n      \u001b[38;5;8mlog Approval(\u001b[0m\n      \u001b[38;5;8m      address tokenOwner=_value,\u001b[0m\n      \u001b[38;5;8m      address spender=caller,\u001b[0m\n      \u001b[38;5;8m      uint256 tokens=_spender)\u001b[0m","trace":[["if",["lt","calldatasize",68],[["revert",0]],[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["if",["lt","calldatasize",68],[["revert",0]],[["if",["iszero",["param","_value"]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_spender"]],["map",["mask_shl",160,0,96,"caller"],["name","allowed",5]]],["param","_value"]],["log",["param","_value"],6.348614097615362e+76,"caller",["param","_spender"]],["stop"]],[["if",["bool",["stor",256,0,["map",["mask_shl",160,0,96,["param","_spender"]],["map",["mask_shl",160,0,96,"caller"],["name","allowed",5]]]]],[["revert",0]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_spender"]],["map",["mask_shl",160,0,96,"caller"],["name","allowed",5]]],["param","_value"]],["log",["param","_value"],6.348614097615362e+76,"caller",["param","_spender"]],["stop"]]]]]]]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,2934517043,["data","caller",["mask_shl",160,0,96,["param","_spender"]],["param","_value"]]],["if",["iszero","ext_call.success"],[["revert",0]],[["stop"]]]]]]]]]]},{"abi_name":"deprecated()","color_name":"deprecated()","const":null,"getter":["bool",["storage",8,160,10]],"hash":"0x0e136b19","length":[2,88],"name":"deprecated()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mdeprecated(): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mdeprecated\u001b[0m)","trace":[["return",["bool",["stor",8,160,["name","deprecated",10]]]]]},{"abi_name":"addBlackList(address)","color_name":"addBlackList(address \u001b[32m_evilUser\u001b[0m)","const":null,"getter":null,"hash":"0x0ecb93c0","length":[4,273],"name":"addBlackList(address _evilUser)","params":{"4":["address","_evilUser"]},"payable":false,"print":"\u001b[95mdef \u001b[0maddBlackList(address \u001b[32m_evilUser\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_evilUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 1\n  \u001b[38;5;8mlog AddedBlackList(address user=_evilUser)\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["store",8,0,["map",["mask_shl",160,0,96,["param","_evilUser"]],["loc",6]],1],["log",["param","_evilUser"],3.025085173750417e+76],["stop"]]]]},{"abi_name":"totalSupply()","color_name":"totalSupply()","const":null,"getter":null,"hash":"0x18160ddd","length":[8,329],"name":"totalSupply()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mtotalSupply(): \u001b[38;5;8m# not payable\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      return \u001b[32m_totalSupply\u001b[0m\n  require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n  call \u001b[32mupgradedAddress\u001b[0m.totalSupply() with:\n       gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n  require ext_call.success\n  return ext_call.return_data[0]","trace":[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["return",["stor",256,0,["name","_totalSupply",1]]]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,404098525,null],["if",["iszero","ext_call.success"],[["revert",0]],[["return",["ext_call.return_data",0,32]]]]]]]]]},{"abi_name":"transferFrom(address,address,uint256)","color_name":"transferFrom(address \u001b[32m_from\u001b[0m, address \u001b[32m_to\u001b[0m, uint256 \u001b[32m_value\u001b[0m)","const":null,"getter":null,"hash":"0x23b872dd","length":[82,8240],"name":"transferFrom(address _from, address _to, uint256 _value)","params":{"36":["address","_to"],"4":["address","_from"],"68":["uint256","_value"]},"payable":false,"print":"\u001b[95mdef \u001b[0mtransferFrom(address \u001b[32m_from\u001b[0m, address \u001b[32m_to\u001b[0m, uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require not \u001b[32mpaused\u001b[0m\n  require not \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  if \u001b[32mdeprecated\u001b[0m:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.transferFromByLegacy(\u001b[38;5;8maddress\u001b[0m param1, \u001b[38;5;8maddress\u001b[0m param2, \u001b[38;5;8maddress\u001b[0m param3, \u001b[38;5;8muint256\u001b[0m param4) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args 0, \u001b[38;5;8muint32(\u001b[0mcaller\u001b[38;5;8m)\u001b[0m, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_value\u001b[0m\n      require ext_call.success\n  else:\n      require calldata.size\u001b[1m \u003e= \u001b[0m100\n      if not \u001b[32m_value\u001b[0m:\n          if \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[1m \u003c \u001b[0m-1:\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n          if 0\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require 0\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=_value,\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=_from,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n      else:\n          require \u001b[32m_value\u001b[0m\n          require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m\u001b[32m_value\u001b[0m\u001b[1m == \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\n          if \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\u001b[1m \u003c \u001b[0m-1:\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n          if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\n              if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=(_value * basisPointsRate / 10000),\u001b[0m\n                  \u001b[38;5;8m      address to=_from,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - (_value * basisPointsRate / 10000)),\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_from\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=_from,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=_from,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m","trace":[["if",["bool",["stor",8,160,["name","paused",0]]],[["revert",0]],[["if",["bool",["stor",8,0,["map",["mask_shl",160,0,96,["param","_from"]],["loc",6]]]],[["revert",0]],[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["if",["lt","calldatasize",100],[["revert",0]],[["if",["bool",["param","_value"]],[["if",["param","_value"],[["if",["eq",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],["param","_value"]],["stor",256,0,["name","basisPointsRate",3]]],[["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],["stor",256,0,["name","maximumFee",4]]],[["if",["ge",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],-1],[["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]]],["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],0],[["log",["add",["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],["log",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],1.0038928713678618e+77,["param","_from"],["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],["mul",-1,["param","_value"]]]],["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]]],["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],0],[["log",["add",["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],["log",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],1.0038928713678618e+77,["param","_from"],["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]]]],[["if",["ge",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],-1],[["if",["le",["stor",256,0,["name","maximumFee",4]],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],0],[["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]]],["log",["stor",256,0,["name","maximumFee",4]],1.0038928713678618e+77,["param","_from"],["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],["mul",-1,["param","_value"]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],0],[["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]]],["log",["stor",256,0,["name","maximumFee",4]],1.0038928713678618e+77,["param","_from"],["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]]]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",0,["stor",256,0,["name","maximumFee",4]]],[["if",["ge",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],-1],[["if",["le",0,["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"]]],["log",["param","_value"],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],["mul",-1,["param","_value"]]]],["if",["le",0,["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"]]],["log",["param","_value"],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]]]],[["if",["ge",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],-1],[["if",["le",["stor",256,0,["name","maximumFee",4]],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],0],[["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]]],["log",["stor",256,0,["name","maximumFee",4]],1.0038928713678618e+77,["param","_from"],["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["map",["mask_shl",160,0,96,["param","_from"]],["name","allowed",5]]]],["mul",-1,["param","_value"]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_from"]],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],0],[["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]]],["log",["stor",256,0,["name","maximumFee",4]],1.0038928713678618e+77,["param","_from"],["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,["param","_from"],["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]]]]]]]]]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,2336717531,["data",0,["mask_shl",32,0,0,"caller"],["mask_shl",160,0,96,["param","_from"]],["mask_shl",160,0,96,["param","_to"]],["param","_value"]]],["if",["iszero","ext_call.success"],[["revert",0]],[["stop"]]]]]]]]]]]]},{"abi_name":"upgradedAddress()","color_name":"upgradedAddress()","const":null,"getter":["storage",160,0,10],"hash":"0x26976e3f","length":[2,92],"name":"upgradedAddress()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mupgradedAddress(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mupgradedAddress\u001b[0m","trace":[["return",["stor",160,0,["name","upgradedAddress",10]]]]},{"abi_name":"balances(address)","color_name":"balances(address \u001b[32m_param1\u001b[0m)","const":null,"getter":["storage",256,0,["sha3",["data",["cd",4],2]]],"hash":"0x27e235e3","length":[2,138],"name":"balances(address _param1)","params":{"4":["address","_param1"]},"payable":false,"print":"\u001b[95mdef \u001b[0mbalances(address \u001b[32m_param1\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param1\u001b[0m\u001b[32m]\u001b[0m","trace":[["return",["stor",256,0,["map",["param","_param1"],["name","balances",2]]]]]},{"abi_name":"decimals()","color_name":"decimals()","const":null,"getter":["storage",256,0,9],"hash":"0x313ce567","length":[2,78],"name":"decimals()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mdecimals(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mdecimals\u001b[0m","trace":[["return",["stor",256,0,["name","decimals",9]]]]},{"abi_name":"maximumFee()","color_name":"maximumFee()","const":null,"getter":["storage",256,0,4],"hash":"0x35390714","length":[2,82],"name":"maximumFee()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mmaximumFee(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mmaximumFee\u001b[0m","trace":[["return",["stor",256,0,["name","maximumFee",4]]]]},{"abi_name":"_totalSupply()","color_name":"_totalSupply()","const":null,"getter":["storage",256,0,1],"hash":"0x3eaaf86b","length":[2,86],"name":"_totalSupply()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0m_totalSupply(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32m_totalSupply\u001b[0m","trace":[["return",["stor",256,0,["name","_totalSupply",1]]]]},{"abi_name":"unpause()","color_name":"unpause()","const":null,"getter":null,"hash":"0x3f4ba83a","length":[5,201],"name":"unpause()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0munpause(): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32mpaused\u001b[0m\n  Mask(96, 0, \u001b[32mstor0\u001b[0m\u001b[32m.field_160\u001b[0m) = 0\n  \u001b[38;5;8mlog Unpause()\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["iszero",["stor",8,160,["name","paused",0]]],[["revert",0]],[["store",96,160,["loc",0],0],["log",null,5.4287302177461375e+76],["stop"]]]]]]},{"abi_name":"getBlackListStatus(address)","color_name":"getBlackListStatus(address \u001b[32m_addr\u001b[0m)","const":null,"getter":["bool",["storage",8,0,["sha3",["data",["mask_shl",160,0,96,["cd",4]],6]]]],"hash":"0x59bf1abe","length":[2,179],"name":"getBlackListStatus(address _addr)","params":{"4":["address","_addr"]},"payable":false,"print":"\u001b[95mdef \u001b[0mgetBlackListStatus(address \u001b[32m_addr\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_addr\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m)","trace":[["return",["bool",["stor",8,0,["map",["mask_shl",160,0,96,["param","_addr"]],["loc",6]]]]]]},{"abi_name":"allowed(address,address)","color_name":"allowed(address \u001b[32m_param1\u001b[0m, address \u001b[32m_param2\u001b[0m)","const":null,"getter":["storage",256,0,["sha3",["data",["cd",36],["sha3",["data",["cd",4],5]]]]],"hash":"0x5c658165","length":[2,198],"name":"allowed(address _param1, address _param2)","params":{"36":["address","_param2"],"4":["address","_param1"]},"payable":false,"print":"\u001b[95mdef \u001b[0mallowed(address \u001b[32m_param1\u001b[0m, address \u001b[32m_param2\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param1\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param2\u001b[0m\u001b[32m]\u001b[0m","trace":[["return",["stor",256,0,["map",["param","_param2"],["map",["param","_param1"],["name","allowed",5]]]]]]},{"abi_name":"paused()","color_name":"paused()","const":null,"getter":["bool",["storage",8,160,0]],"hash":"0x5c975abb","length":[2,80],"name":"paused()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mpaused(): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mpaused\u001b[0m)","trace":[["return",["bool",["stor",8,160,["name","paused",0]]]]]},{"abi_name":"balanceOf(address)","color_name":"balanceOf(address \u001b[32m_owner\u001b[0m)","const":null,"getter":null,"hash":"0x70a08231","length":[9,469],"name":"balanceOf(address _owner)","params":{"4":["address","_owner"]},"payable":false,"print":"\u001b[95mdef \u001b[0mbalanceOf(address \u001b[32m_owner\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      return \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_owner\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n  call \u001b[32mupgradedAddress\u001b[0m.balanceOf(\u001b[38;5;8maddress\u001b[0m tokenOwner) with:\n       gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n      args \u001b[32m_owner\u001b[0m\n  require ext_call.success\n  return ext_call.return_data[0]","trace":[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["return",["stor",256,0,["map",["mask_shl",160,0,96,["param","_owner"]],["name","balances",2]]]]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,1889567281,["param","_owner"]],["if",["iszero","ext_call.success"],[["revert",0]],[["return",["ext_call.return_data",0,32]]]]]]]]]},{"abi_name":"pause()","color_name":"pause()","const":null,"getter":null,"hash":"0x8456cb59","length":[5,201],"name":"pause()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mpause(): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require not \u001b[32mpaused\u001b[0m\n  Mask(96, 0, \u001b[32mstor0\u001b[0m\u001b[32m.field_160\u001b[0m) = 1\n  \u001b[38;5;8mlog Pause()\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["bool",["stor",8,160,["name","paused",0]]],[["revert",0]],[["store",96,160,["loc",0],1],["log",null,4.7728944958663564e+76],["stop"]]]]]]},{"abi_name":"getOwner()","color_name":"getOwner()","const":null,"getter":["storage",160,0,0],"hash":"0x893d20e8","length":[2,75],"name":"getOwner()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mgetOwner(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mowner\u001b[0m","trace":[["return",["stor",160,0,["name","owner",0]]]]},{"abi_name":"owner()","color_name":"owner()","const":null,"getter":["storage",160,0,0],"hash":"0x8da5cb5b","length":[2,72],"name":"owner()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mowner(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mowner\u001b[0m","trace":[["return",["stor",160,0,["name","owner",0]]]]},{"abi_name":"symbol()","color_name":"symbol()","const":null,"getter":["storage",256,0,["array",["range",0,["storage",256,0,["length",["loc",8]]]],["loc",8]]],"hash":"0x95d89b41","length":[2,140],"name":"symbol()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0msymbol(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32msymbol\u001b[0m\u001b[32m[\u001b[0m0 \u001b[95mlen\u001b[0m \u001b[32msymbol\u001b[0m\u001b[32m.length\u001b[0m\u001b[32m]\u001b[0m","trace":[["return",["stor",256,0,["array",["range",0,["stor",256,0,["length",["name","symbol",8]]]],["name","symbol",8]]]]]},{"abi_name":"transfer(address,uint256)","color_name":"transfer(address \u001b[32m_to\u001b[0m, uint256 \u001b[32m_value\u001b[0m)","const":null,"getter":null,"hash":"0xa9059cbb","length":[76,6868],"name":"transfer(address _to, uint256 _value)","params":{"36":["uint256","_value"],"4":["address","_to"]},"payable":false,"print":"\u001b[95mdef \u001b[0mtransfer(address \u001b[32m_to\u001b[0m, uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require not \u001b[32mpaused\u001b[0m\n  require not \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n  if \u001b[32mdeprecated\u001b[0m:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.transferByLegacy(\u001b[38;5;8maddress\u001b[0m param1, \u001b[38;5;8maddress\u001b[0m param2, \u001b[38;5;8muint256\u001b[0m param3) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args caller, \u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_value\u001b[0m\n      require ext_call.success\n  else:\n      require calldata.size\u001b[1m \u003e= \u001b[0m68\n      if not \u001b[32m_value\u001b[0m:\n          if 0\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require 0\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=_value,\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=caller,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n      else:\n          require \u001b[32m_value\u001b[0m\n          require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m\u001b[32m_value\u001b[0m\u001b[1m == \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\n          if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32mmaximumFee\u001b[0m:\n              require \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\n              if \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + (\u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000)\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_value\u001b[0m\u001b[1m * \u001b[0m\u001b[32mbasisPointsRate\u001b[0m\u001b[1m / \u001b[0m10000\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=(_value * basisPointsRate / 10000),\u001b[0m\n                  \u001b[38;5;8m      address to=caller,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - (_value * basisPointsRate / 10000)),\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m\n          else:\n              require \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32m_value\u001b[0m\n              require \u001b[32m_value\u001b[0m\u001b[1m \u003c= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0mcaller\u001b[32m]\u001b[0m -= \u001b[32m_value\u001b[0m\n              require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n              \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_to\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_value\u001b[0m - \u001b[32mmaximumFee\u001b[0m\n              if \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e \u001b[0m0:\n                  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32mmaximumFee\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n                  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32mmaximumFee\u001b[0m\n                  \u001b[38;5;8mlog Transfer(\u001b[0m\n                  \u001b[38;5;8m      address from=maximumFee,\u001b[0m\n                  \u001b[38;5;8m      address to=caller,\u001b[0m\n                  \u001b[38;5;8m      uint256 tokens=owner)\u001b[0m\n              \u001b[38;5;8mlog Transfer(\u001b[0m\n              \u001b[38;5;8m      address from=(_value - maximumFee),\u001b[0m\n              \u001b[38;5;8m      address to=caller,\u001b[0m\n              \u001b[38;5;8m      uint256 tokens=_to)\u001b[0m","trace":[["if",["bool",["stor",8,160,["name","paused",0]]],[["revert",0]],[["if",["bool",["stor",8,0,["map",["mask_shl",160,0,96,"caller"],["loc",6]]]],[["revert",0]],[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["if",["lt","calldatasize",68],[["revert",0]],[["if",["bool",["param","_value"]],[["if",["param","_value"],[["if",["eq",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],["param","_value"]],["stor",256,0,["name","basisPointsRate",3]]],[["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],["stor",256,0,["name","maximumFee",4]]],[["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]]],["if",["le",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],0],[["log",["add",["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],["log",["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000],1.0038928713678618e+77,"caller",["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["div",["mul",["param","_value"],["stor",256,0,["name","basisPointsRate",3]]],10000]]],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",["stor",256,0,["name","maximumFee",4]],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],0],[["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]]],["log",["stor",256,0,["name","maximumFee",4]],1.0038928713678618e+77,"caller",["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",0,["stor",256,0,["name","maximumFee",4]]],[["if",["le",0,["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"]]],["log",["param","_value"],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]],[["if",["le",["stor",256,0,["name","maximumFee",4]],["param","_value"]],[["if",["le",["param","_value"],["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,"caller"],["name","balances",2]]],["mul",-1,["param","_value"]]]],["if",["ge",["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]],["add",["stor",256,0,["map",["mask_shl",160,0,96,["param","_to"]],["name","balances",2]]],["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]]],["if",["le",["stor",256,0,["name","maximumFee",4]],0],[["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["if",["ge",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["stor",256,0,["name","maximumFee",4]]]],["log",["stor",256,0,["name","maximumFee",4]],1.0038928713678618e+77,"caller",["stor",160,0,["name","owner",0]]],["log",["add",["param","_value"],["mul",-1,["stor",256,0,["name","maximumFee",4]]]],1.0038928713678618e+77,"caller",["param","_to"]],["stop"]],[["invalid"]]]]]],[["invalid"]]]],[["invalid"]]]],[["invalid"]]]]]]]]]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,1847105546,["data","caller",["mask_shl",160,0,96,["param","_to"]],["param","_value"]]],["if",["iszero","ext_call.success"],[["revert",0]],[["stop"]]]]]]]]]]]]},{"abi_name":"setParams(uint256,uint256)","color_name":"setParams(uint256 \u001b[32m_newBasisPoints\u001b[0m, uint256 \u001b[32m_newMaxFee\u001b[0m)","const":null,"getter":null,"hash":"0xc0324c77","length":[14,745],"name":"setParams(uint256 _newBasisPoints, uint256 _newMaxFee)","params":{"36":["uint256","_newMaxFee"],"4":["uint256","_newBasisPoints"]},"payable":false,"print":"\u001b[95mdef \u001b[0msetParams(uint256 \u001b[32m_newBasisPoints\u001b[0m, uint256 \u001b[32m_newMaxFee\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32m_newBasisPoints\u001b[0m\u001b[1m \u003c \u001b[0m20\n  require \u001b[32m_newMaxFee\u001b[0m\u001b[1m \u003c \u001b[0m50\n  \u001b[32mbasisPointsRate\u001b[0m = \u001b[32m_newBasisPoints\u001b[0m\n  if not \u001b[32m_newMaxFee\u001b[0m:\n      \u001b[32mmaximumFee\u001b[0m = 0\n  else:\n      require \u001b[32m_newMaxFee\u001b[0m\n      require \u001b[32m_newMaxFee\u001b[0m\u001b[1m * \u001b[0m10^\u001b[32mdecimals\u001b[0m\u001b[1m / \u001b[0m\u001b[32m_newMaxFee\u001b[0m\u001b[1m == \u001b[0m10^\u001b[32mdecimals\u001b[0m\n      \u001b[32mmaximumFee\u001b[0m = \u001b[32m_newMaxFee\u001b[0m\u001b[1m * \u001b[0m10^\u001b[32mdecimals\u001b[0m\n  \u001b[38;5;8mlog Params(\u001b[0m\n  \u001b[38;5;8m      uint256 feeBasisPoints=basisPointsRate,\u001b[0m\n  \u001b[38;5;8m      uint256 maxFee=maximumFee)\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["ge",["param","_newBasisPoints"],20],[["revert",0]],[["if",["ge",["param","_newMaxFee"],50],[["revert",0]],[["store",256,0,["name","basisPointsRate",3],["param","_newBasisPoints"]],["if",["bool",["param","_newMaxFee"]],[["if",["param","_newMaxFee"],[["if",["eq",["div",["mul",["param","_newMaxFee"],["exp",10,["stor",256,0,["name","decimals",9]]]],["param","_newMaxFee"]],["exp",10,["stor",256,0,["name","decimals",9]]]],[["store",256,0,["name","maximumFee",4],["mul",["param","_newMaxFee"],["exp",10,["stor",256,0,["name","decimals",9]]]]],["log",["data",["stor",256,0,["name","basisPointsRate",3]],["stor",256,0,["name","maximumFee",4]]],7.972832428013388e+76],["stop"]],[["invalid"]]]],[["invalid"]]]],[["store",256,0,["name","maximumFee",4],0],["log",["data",["stor",256,0,["name","basisPointsRate",3]],["stor",256,0,["name","maximumFee",4]]],7.972832428013388e+76],["stop"]]]]]]]]]]},{"abi_name":"issue(uint256)","color_name":"issue(uint256 \u001b[32m_amount\u001b[0m)","const":null,"getter":null,"hash":"0xcc872b66","length":[7,655],"name":"issue(uint256 _amount)","params":{"4":["uint256","_amount"]},"payable":false,"print":"\u001b[95mdef \u001b[0missue(uint256 \u001b[32m_amount\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32m_totalSupply\u001b[0m + \u001b[32m_amount\u001b[0m\u001b[1m \u003e \u001b[0m\u001b[32m_totalSupply\u001b[0m\n  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m + \u001b[32m_amount\u001b[0m\u001b[1m \u003e \u001b[0m\u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m += \u001b[32m_amount\u001b[0m\n  \u001b[32m_totalSupply\u001b[0m += \u001b[32m_amount\u001b[0m\n  \u001b[38;5;8mlog Issue(uint256 amount=_amount)\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["le",["add",["stor",256,0,["name","_totalSupply",1]],["param","_amount"]],["stor",256,0,["name","_totalSupply",1]]],[["revert",0]],[["if",["le",["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["param","_amount"]],["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]]],[["revert",0]],[["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["param","_amount"]]],["store",256,0,["name","_totalSupply",1],["add",["stor",256,0,["name","_totalSupply",1]],["param","_amount"]]],["log",["param","_amount"],9.204965167702317e+76],["stop"]]]]]]]]},{"abi_name":"redeem(uint256)","color_name":"redeem(uint256 \u001b[32m_tokens\u001b[0m)","const":null,"getter":null,"hash":"0xdb006a75","length":[7,532],"name":"redeem(uint256 _tokens)","params":{"4":["uint256","_tokens"]},"payable":false,"print":"\u001b[95mdef \u001b[0mredeem(uint256 \u001b[32m_tokens\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32m_totalSupply\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32m_tokens\u001b[0m\n  require \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[1m \u003e= \u001b[0m\u001b[32m_tokens\u001b[0m\n  \u001b[32m_totalSupply\u001b[0m -= \u001b[32m_tokens\u001b[0m\n  \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32mstor0\u001b[0m\u001b[32m.field_0\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m -= \u001b[32m_tokens\u001b[0m\n  \u001b[38;5;8mlog Redeem(uint256 amount=_tokens)\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["lt",["stor",256,0,["name","_totalSupply",1]],["param","_tokens"]],[["revert",0]],[["if",["lt",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["param","_tokens"]],[["revert",0]],[["store",256,0,["name","_totalSupply",1],["add",["stor",256,0,["name","_totalSupply",1]],["mul",-1,["param","_tokens"]]]],["store",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]],["add",["stor",256,0,["map",["stor",160,0,["loc",0]],["name","balances",2]]],["mul",-1,["param","_tokens"]]]],["log",["param","_tokens"],5.0739164217275674e+76],["stop"]]]]]]]]},{"abi_name":"allowance(address,address)","color_name":"allowance(address \u001b[32m_owner\u001b[0m, address \u001b[32m_spender\u001b[0m)","const":null,"getter":null,"hash":"0xdd62ed3e","length":[9,645],"name":"allowance(address _owner, address _spender)","params":{"36":["address","_spender"],"4":["address","_owner"]},"payable":false,"print":"\u001b[95mdef \u001b[0mallowance(address \u001b[32m_owner\u001b[0m, address \u001b[32m_spender\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      return \u001b[32mallowed\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_owner\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_spender\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n  call \u001b[32mupgradedAddress\u001b[0m.allowance(\u001b[38;5;8maddress\u001b[0m tokenOwner, \u001b[38;5;8maddress\u001b[0m spender) with:\n       gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n      args \u001b[38;5;8maddr(\u001b[0m\u001b[32m_owner\u001b[0m\u001b[38;5;8m)\u001b[0m, \u001b[32m_spender\u001b[0m\n  require ext_call.success\n  return ext_call.return_data[0]","trace":[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["return",["stor",256,0,["map",["mask_shl",160,0,96,["param","_spender"]],["map",["mask_shl",160,0,96,["param","_owner"]],["name","allowed",5]]]]]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,3714247998,["data",["mask_shl",160,0,96,["param","_owner"]],["param","_spender"]]],["if",["iszero","ext_call.success"],[["revert",0]],[["return",["ext_call.return_data",0,32]]]]]]]]]},{"abi_name":"basisPointsRate()","color_name":"basisPointsRate()","const":null,"getter":["storage",256,0,3],"hash":"0xdd644f72","length":[2,92],"name":"basisPointsRate()","params":{},"payable":false,"print":"\u001b[95mdef \u001b[0mbasisPointsRate(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mbasisPointsRate\u001b[0m","trace":[["return",["stor",256,0,["name","basisPointsRate",3]]]]},{"abi_name":"isBlackListed(address)","color_name":"isBlackListed(address \u001b[32m_param1\u001b[0m)","const":null,"getter":["bool",["storage",8,0,["sha3",["data",["cd",4],6]]]],"hash":"0xe47d6060","length":[2,146],"name":"isBlackListed(address _param1)","params":{"4":["address","_param1"]},"payable":false,"print":"\u001b[95mdef \u001b[0misBlackListed(address \u001b[32m_param1\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  return bool(\u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[32m_param1\u001b[0m\u001b[32m]\u001b[0m)","trace":[["return",["bool",["stor",8,0,["map",["param","_param1"],["loc",6]]]]]]},{"abi_name":"removeBlackList(address)","color_name":"removeBlackList(address \u001b[32m_clearedUser\u001b[0m)","const":null,"getter":null,"hash":"0xe4997dc5","length":[4,287],"name":"removeBlackList(address _clearedUser)","params":{"4":["address","_clearedUser"]},"payable":false,"print":"\u001b[95mdef \u001b[0mremoveBlackList(address \u001b[32m_clearedUser\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_clearedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 0\n  \u001b[38;5;8mlog RemovedBlackList(address user=_clearedUser)\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["store",8,0,["map",["mask_shl",160,0,96,["param","_clearedUser"]],["loc",6]],0],["log",["param","_clearedUser"],9.766056960089646e+76],["stop"]]]]},{"abi_name":"MAX_UINT()","color_name":"MAX_UINT()","const":["return",-1],"getter":null,"hash":"0xe5b5019a","length":[1,36],"name":"MAX_UINT()","params":{},"payable":false,"print":"\u001b[95mconst \u001b[0mMAX_UINT = \u001b[1m-1\u001b[0m","trace":[["return",-1]]},{"abi_name":"transferOwnership(address)","color_name":"transferOwnership(address \u001b[32m_newOwner\u001b[0m)","const":null,"getter":null,"hash":"0xf2fde38b","length":[4,196],"name":"transferOwnership(address _newOwner)","params":{"4":["address","_newOwner"]},"payable":false,"print":"\u001b[95mdef \u001b[0mtransferOwnership(address \u001b[32m_newOwner\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  if \u001b[32m_newOwner\u001b[0m:\n      \u001b[32mowner\u001b[0m = \u001b[32m_newOwner\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["iszero",["param","_newOwner"]],[["stop"]],[["store",160,0,["name","owner",0],["param","_newOwner"]],["stop"]]]]]]},{"abi_name":"destroyBlackFunds(address)","color_name":"destroyBlackFunds(address \u001b[32m_blackListedUser\u001b[0m)","const":null,"getter":null,"hash":"0xf3bdc228","length":[20,1305],"name":"destroyBlackFunds(address _blackListedUser)","params":{"4":["address","_blackListedUser"]},"payable":false,"print":"\u001b[95mdef \u001b[0mdestroyBlackFunds(address \u001b[32m_blackListedUser\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require caller\u001b[1m == \u001b[0m\u001b[32mowner\u001b[0m\n  require \u001b[32mstor6\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n  if not \u001b[32mdeprecated\u001b[0m:\n      \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 0\n      \u001b[32m_totalSupply\u001b[0m -= \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m\n      \u001b[38;5;8mlog DestroyedBlackFunds(\u001b[0m\n      \u001b[38;5;8m      address blackListedUser=addr(_blackListedUser),\u001b[0m\n      \u001b[38;5;8m      uint256 balance=balances[addr(_blackListedUser)])\u001b[0m\n  else:\n      require ext_code.size(\u001b[32mupgradedAddress\u001b[0m)\n      call \u001b[32mupgradedAddress\u001b[0m.balanceOf(\u001b[38;5;8maddress\u001b[0m tokenOwner) with:\n           gas gas_remaining - 710 \u001b[38;5;8mwei\u001b[0m\n          args \u001b[32m_blackListedUser\u001b[0m\n      require ext_call.success\n      \u001b[32mbalances\u001b[0m\u001b[32m[\u001b[0m\u001b[38;5;8maddr(\u001b[0m\u001b[32m_blackListedUser\u001b[0m\u001b[38;5;8m)\u001b[0m\u001b[32m]\u001b[0m = 0\n      \u001b[32m_totalSupply\u001b[0m -= ext_call.return_data[0]\n      \u001b[38;5;8mlog DestroyedBlackFunds(\u001b[0m\n      \u001b[38;5;8m      address blackListedUser=addr(_blackListedUser),\u001b[0m\n      \u001b[38;5;8m      uint256 balance=ext_call.return_data[0])\u001b[0m","trace":[["if",["iszero",["eq","caller",["stor",160,0,["name","owner",0]]]],[["revert",0]],[["if",["iszero",["stor",8,0,["map",["mask_shl",160,0,96,["param","_blackListedUser"]],["loc",6]]]],[["revert",0]],[["if",["iszero",["stor",8,160,["name","deprecated",10]]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_blackListedUser"]],["name","balances",2]],0],["store",256,0,["name","_totalSupply",1],["add",["stor",256,0,["name","_totalSupply",1]],["mul",-1,["stor",256,0,["map",["mask_shl",160,0,96,["param","_blackListedUser"]],["name","balances",2]]]]]],["log",["data",["mask_shl",160,0,96,["param","_blackListedUser"]],["stor",256,0,["map",["mask_shl",160,0,96,["param","_blackListedUser"]],["name","balances",2]]]],4.42823114252598e+76],["stop"]],[["if",["iszero",["extcodesize",["stor",160,0,["name","upgradedAddress",10]]]],[["revert",0]],[["call",["add",-710,"gas"],["stor",160,0,["name","upgradedAddress",10]],0,1889567281,["param","_blackListedUser"]],["if",["iszero","ext_call.success"],[["revert",0]],[["store",256,0,["map",["mask_shl",160,0,96,["param","_blackListedUser"]],["name","balances",2]],0],["store",256,0,["name","_totalSupply",1],["add",["stor",256,0,["name","_totalSupply",1]],["mul",-1,["ext_call.return_data",0,32]]]],["log",["data",["mask_shl",160,0,96,["param","_blackListedUser"]],["ext_call.return_data",0,32]],4.42823114252598e+76],["stop"]]]]]]]]]]]]},{"abi_name":null,"color_name":"_fallback()","const":null,"getter":null,"hash":"_fallback()","length":[2,83],"name":"_fallback()","params":{},"payable":true,"print":"\u001b[95mdef \u001b[0m_fallback()\u001b[95m payable\u001b[0m: \u001b[38;5;8m# default function\u001b[0m\n  revert","trace":[["revert",0]]}],"storage":null}}